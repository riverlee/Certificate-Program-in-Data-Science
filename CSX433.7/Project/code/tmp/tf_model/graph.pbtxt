node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue"
  op: "RandomShuffleQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 1000
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "min_after_dequeue"
    value {
      i: 250
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
          dim {
            size: 188
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "enqueue_input/Placeholder"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_1"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_2"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "enqueue_input/random_shuffle_queue"
  input: "enqueue_input/Placeholder"
  input: "enqueue_input/Placeholder_1"
  input: "enqueue_input/Placeholder_2"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_Close"
  op: "QueueCloseV2"
  input: "enqueue_input/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_Close_1"
  op: "QueueCloseV2"
  input: "enqueue_input/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_Size"
  op: "QueueSizeV2"
  input: "enqueue_input/random_shuffle_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 250
      }
    }
  }
}
node {
  name: "enqueue_input/sub"
  op: "Sub"
  input: "enqueue_input/random_shuffle_queue_Size"
  input: "enqueue_input/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "enqueue_input/Maximum"
  op: "Maximum"
  input: "enqueue_input/Maximum/x"
  input: "enqueue_input/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/Cast"
  op: "Cast"
  input: "enqueue_input/Maximum"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00133333331905
      }
    }
  }
}
node {
  name: "enqueue_input/mul"
  op: "Mul"
  input: "enqueue_input/Cast"
  input: "enqueue_input/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full"
      }
    }
  }
}
node {
  name: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full"
  op: "ScalarSummary"
  input: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full/tags"
  input: "enqueue_input/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "random_shuffle_queue_DequeueMany/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2000
      }
    }
  }
}
node {
  name: "random_shuffle_queue_DequeueMany"
  op: "QueueDequeueManyV2"
  input: "enqueue_input/random_shuffle_queue"
  input: "random_shuffle_queue_DequeueMany/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
        shape {
          dim {
            size: 2000
          }
          dim {
            size: 188
          }
        }
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_0/Initializer/random_uniform/max"
  input: "device_dummy_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_0/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_0/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_0/Initializer/random_uniform/mul"
  input: "device_dummy_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_0"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_0/Assign"
  op: "Assign"
  input: "device_dummy_0"
  input: "device_dummy_0/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_0/read"
  op: "Identity"
  input: "device_dummy_0"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_1/Initializer/random_uniform/max"
  input: "device_dummy_1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_1/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_1/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_1/Initializer/random_uniform/mul"
  input: "device_dummy_1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_1/Assign"
  op: "Assign"
  input: "device_dummy_1"
  input: "device_dummy_1/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_1/read"
  op: "Identity"
  input: "device_dummy_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_2/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_2/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_2/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_2/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_2/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_2/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_2/Initializer/random_uniform/max"
  input: "device_dummy_2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_2/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_2/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_2/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_2/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_2/Initializer/random_uniform/mul"
  input: "device_dummy_2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_2"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_2/Assign"
  op: "Assign"
  input: "device_dummy_2"
  input: "device_dummy_2/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_2/read"
  op: "Identity"
  input: "device_dummy_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_3/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_3/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_3/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_3/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_3/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_3/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_3/Initializer/random_uniform/max"
  input: "device_dummy_3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_3/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_3/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_3/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_3/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_3/Initializer/random_uniform/mul"
  input: "device_dummy_3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_3"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_3/Assign"
  op: "Assign"
  input: "device_dummy_3"
  input: "device_dummy_3/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_3/read"
  op: "Identity"
  input: "device_dummy_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_4/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_4/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_4/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_4/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_4/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_4/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_4/Initializer/random_uniform/max"
  input: "device_dummy_4/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_4/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_4/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_4/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_4/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_4/Initializer/random_uniform/mul"
  input: "device_dummy_4/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_4"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_4/Assign"
  op: "Assign"
  input: "device_dummy_4"
  input: "device_dummy_4/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_4/read"
  op: "Identity"
  input: "device_dummy_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_5/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_5/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_5/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_5/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_5/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_5/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_5/Initializer/random_uniform/max"
  input: "device_dummy_5/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_5/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_5/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_5/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_5/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_5/Initializer/random_uniform/mul"
  input: "device_dummy_5/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_5"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_5/Assign"
  op: "Assign"
  input: "device_dummy_5"
  input: "device_dummy_5/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_5/read"
  op: "Identity"
  input: "device_dummy_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_6/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_6/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_6/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_6/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_6/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_6/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_6/Initializer/random_uniform/max"
  input: "device_dummy_6/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_6/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_6/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_6/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_6/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_6/Initializer/random_uniform/mul"
  input: "device_dummy_6/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_6"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_6/Assign"
  op: "Assign"
  input: "device_dummy_6"
  input: "device_dummy_6/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_6/read"
  op: "Identity"
  input: "device_dummy_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_7/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_7/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_7/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_7/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_7/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_7/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_7/Initializer/random_uniform/max"
  input: "device_dummy_7/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_7/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_7/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_7/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_7/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_7/Initializer/random_uniform/mul"
  input: "device_dummy_7/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_7"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_7/Assign"
  op: "Assign"
  input: "device_dummy_7"
  input: "device_dummy_7/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_7/read"
  op: "Identity"
  input: "device_dummy_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_8/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_8/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_8/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_8/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_8/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_8/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_8/Initializer/random_uniform/max"
  input: "device_dummy_8/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_8/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_8/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_8/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_8/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_8/Initializer/random_uniform/mul"
  input: "device_dummy_8/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_8"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_8/Assign"
  op: "Assign"
  input: "device_dummy_8"
  input: "device_dummy_8/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_8/read"
  op: "Identity"
  input: "device_dummy_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_9/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_9/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_9/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_9/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_9/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_9/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_9/Initializer/random_uniform/max"
  input: "device_dummy_9/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_9/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_9/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_9/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_9/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_9/Initializer/random_uniform/mul"
  input: "device_dummy_9/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_9"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_9/Assign"
  op: "Assign"
  input: "device_dummy_9"
  input: "device_dummy_9/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_9/read"
  op: "Identity"
  input: "device_dummy_9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_10/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_10/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_10/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_10/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_10/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_10/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_10/Initializer/random_uniform/max"
  input: "device_dummy_10/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_10/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_10/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_10/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_10/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_10/Initializer/random_uniform/mul"
  input: "device_dummy_10/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_10"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_10/Assign"
  op: "Assign"
  input: "device_dummy_10"
  input: "device_dummy_10/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_10/read"
  op: "Identity"
  input: "device_dummy_10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_11/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_11/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_11/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_11/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_11/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_11/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_11/Initializer/random_uniform/max"
  input: "device_dummy_11/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_11/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_11/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_11/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_11/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_11/Initializer/random_uniform/mul"
  input: "device_dummy_11/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_11"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_11/Assign"
  op: "Assign"
  input: "device_dummy_11"
  input: "device_dummy_11/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_11/read"
  op: "Identity"
  input: "device_dummy_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_12/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_12/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_12/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_12/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_12/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_12/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_12/Initializer/random_uniform/max"
  input: "device_dummy_12/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_12/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_12/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_12/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_12/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_12/Initializer/random_uniform/mul"
  input: "device_dummy_12/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_12"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_12/Assign"
  op: "Assign"
  input: "device_dummy_12"
  input: "device_dummy_12/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_12/read"
  op: "Identity"
  input: "device_dummy_12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_13/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_13/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_13/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_13/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_13/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_13/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_13/Initializer/random_uniform/max"
  input: "device_dummy_13/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_13/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_13/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_13/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_13/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_13/Initializer/random_uniform/mul"
  input: "device_dummy_13/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_13"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_13/Assign"
  op: "Assign"
  input: "device_dummy_13"
  input: "device_dummy_13/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_13/read"
  op: "Identity"
  input: "device_dummy_13"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_14/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_14/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_14/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_14/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_14/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_14/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_14/Initializer/random_uniform/max"
  input: "device_dummy_14/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_14/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_14/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_14/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_14/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_14/Initializer/random_uniform/mul"
  input: "device_dummy_14/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_14"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_14/Assign"
  op: "Assign"
  input: "device_dummy_14"
  input: "device_dummy_14/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_14/read"
  op: "Identity"
  input: "device_dummy_14"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_15/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_15"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_15/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_15"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_15/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_15"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_15/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_15/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_15"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_15/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_15/Initializer/random_uniform/max"
  input: "device_dummy_15/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_15"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_15/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_15/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_15/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_15"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_15/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_15/Initializer/random_uniform/mul"
  input: "device_dummy_15/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_15"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_15"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_15"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_15/Assign"
  op: "Assign"
  input: "device_dummy_15"
  input: "device_dummy_15/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_15"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_15/read"
  op: "Identity"
  input: "device_dummy_15"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_15"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_16/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_16"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_16/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_16"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_16/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_16"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_16/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_16/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_16"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_16/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_16/Initializer/random_uniform/max"
  input: "device_dummy_16/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_16"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_16/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_16/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_16/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_16"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_16/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_16/Initializer/random_uniform/mul"
  input: "device_dummy_16/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_16"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_16"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_16"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_16/Assign"
  op: "Assign"
  input: "device_dummy_16"
  input: "device_dummy_16/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_16"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_16/read"
  op: "Identity"
  input: "device_dummy_16"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_16"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_17/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_17"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_17/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_17"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_17/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_17"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_17/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_17/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_17"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_17/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_17/Initializer/random_uniform/max"
  input: "device_dummy_17/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_17"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_17/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_17/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_17/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_17"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_17/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_17/Initializer/random_uniform/mul"
  input: "device_dummy_17/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_17"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_17"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_17"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_17/Assign"
  op: "Assign"
  input: "device_dummy_17"
  input: "device_dummy_17/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_17"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_17/read"
  op: "Identity"
  input: "device_dummy_17"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_17"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_18/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_18"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_18/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_18"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_18/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_18"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_18/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_18/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_18"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_18/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_18/Initializer/random_uniform/max"
  input: "device_dummy_18/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_18"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_18/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_18/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_18/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_18"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_18/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_18/Initializer/random_uniform/mul"
  input: "device_dummy_18/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_18"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_18"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_18"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_18/Assign"
  op: "Assign"
  input: "device_dummy_18"
  input: "device_dummy_18/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_18"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_18/read"
  op: "Identity"
  input: "device_dummy_18"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_18"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_19/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_19"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_19/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_19"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_19/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_19"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_19/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_19/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_19"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_19/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_19/Initializer/random_uniform/max"
  input: "device_dummy_19/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_19"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_19/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_19/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_19/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_19"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_19/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_19/Initializer/random_uniform/mul"
  input: "device_dummy_19/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_19"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_19"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_19"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_19/Assign"
  op: "Assign"
  input: "device_dummy_19"
  input: "device_dummy_19/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_19"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_19/read"
  op: "Identity"
  input: "device_dummy_19"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_19"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_20/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_20"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_20/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_20"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_20/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_20"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_20/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_20/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_20"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_20/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_20/Initializer/random_uniform/max"
  input: "device_dummy_20/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_20"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_20/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_20/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_20/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_20"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_20/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_20/Initializer/random_uniform/mul"
  input: "device_dummy_20/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_20"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_20"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_20"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_20/Assign"
  op: "Assign"
  input: "device_dummy_20"
  input: "device_dummy_20/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_20"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_20/read"
  op: "Identity"
  input: "device_dummy_20"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_20"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_21/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_21"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_21/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_21"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_21/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_21"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_21/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_21/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_21"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_21/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_21/Initializer/random_uniform/max"
  input: "device_dummy_21/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_21"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_21/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_21/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_21/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_21"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_21/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_21/Initializer/random_uniform/mul"
  input: "device_dummy_21/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_21"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_21"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_21"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_21/Assign"
  op: "Assign"
  input: "device_dummy_21"
  input: "device_dummy_21/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_21"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_21/read"
  op: "Identity"
  input: "device_dummy_21"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_21"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_22/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_22"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_22/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_22"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_22/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_22"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_22/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_22/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_22"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_22/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_22/Initializer/random_uniform/max"
  input: "device_dummy_22/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_22"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_22/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_22/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_22/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_22"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_22/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_22/Initializer/random_uniform/mul"
  input: "device_dummy_22/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_22"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_22"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_22"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_22/Assign"
  op: "Assign"
  input: "device_dummy_22"
  input: "device_dummy_22/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_22"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_22/read"
  op: "Identity"
  input: "device_dummy_22"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_22"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_23/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_23"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_23/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_23"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_23/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_23"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_23/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_23/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_23"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_23/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_23/Initializer/random_uniform/max"
  input: "device_dummy_23/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_23"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_23/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_23/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_23/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_23"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_23/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_23/Initializer/random_uniform/mul"
  input: "device_dummy_23/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_23"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_23"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_23"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_23/Assign"
  op: "Assign"
  input: "device_dummy_23"
  input: "device_dummy_23/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_23"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_23/read"
  op: "Identity"
  input: "device_dummy_23"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_23"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_24/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_24"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_24/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_24"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_24/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_24"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "device_dummy_24/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_24/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_24"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_24/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_24/Initializer/random_uniform/max"
  input: "device_dummy_24/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_24"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_24/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_24/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_24/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_24"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_24/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_24/Initializer/random_uniform/mul"
  input: "device_dummy_24/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_24"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_24"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_24"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_24/Assign"
  op: "Assign"
  input: "device_dummy_24"
  input: "device_dummy_24/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_24"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_24/read"
  op: "Identity"
  input: "device_dummy_24"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_24"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "stats-0"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-0/"
    }
  }
}
node {
  name: "stats-0/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-0/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-0"
  input: "stats-0/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-0/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-0/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-0"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-0/"
    }
  }
}
node {
  name: "tree-0/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-0/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-0"
  input: "tree-0/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-0/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-0/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-1"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-1/"
    }
  }
}
node {
  name: "stats-1/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-1/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-1"
  input: "stats-1/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-1/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-1/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-1"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-1/"
    }
  }
}
node {
  name: "tree-1/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-1/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-1"
  input: "tree-1/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-1/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-1/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-2"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-2/"
    }
  }
}
node {
  name: "stats-2/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-2/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-2"
  input: "stats-2/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-2/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-2/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-2"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-2/"
    }
  }
}
node {
  name: "tree-2/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-2/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-2"
  input: "tree-2/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-2/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-2/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-3"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-3/"
    }
  }
}
node {
  name: "stats-3/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-3/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-3"
  input: "stats-3/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-3/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-3/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-3"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-3/"
    }
  }
}
node {
  name: "tree-3/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-3/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-3"
  input: "tree-3/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-3/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-3/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-4"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-4/"
    }
  }
}
node {
  name: "stats-4/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-4/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-4"
  input: "stats-4/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-4/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-4"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-4/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-4"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-4"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-4/"
    }
  }
}
node {
  name: "tree-4/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-4/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-4"
  input: "tree-4/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-4/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-4"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-4/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-4"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-5"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-5/"
    }
  }
}
node {
  name: "stats-5/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-5/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-5"
  input: "stats-5/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-5/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-5"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-5/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-5"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-5"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-5/"
    }
  }
}
node {
  name: "tree-5/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-5/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-5"
  input: "tree-5/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-5/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-5"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-5/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-5"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-6"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-6/"
    }
  }
}
node {
  name: "stats-6/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-6/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-6"
  input: "stats-6/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-6/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-6"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-6/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-6"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-6"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-6/"
    }
  }
}
node {
  name: "tree-6/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-6/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-6"
  input: "tree-6/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-6/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-6"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-6/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-6"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-7"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-7/"
    }
  }
}
node {
  name: "stats-7/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-7/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-7"
  input: "stats-7/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-7/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-7"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-7/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-7"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-7"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-7/"
    }
  }
}
node {
  name: "tree-7/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-7/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-7"
  input: "tree-7/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-7/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-7"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-7/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-7"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-8"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-8/"
    }
  }
}
node {
  name: "stats-8/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-8/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-8"
  input: "stats-8/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-8/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-8"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-8/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-8"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-8"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-8/"
    }
  }
}
node {
  name: "tree-8/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-8/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-8"
  input: "tree-8/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-8/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-8"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-8/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-8"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-9"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-9/"
    }
  }
}
node {
  name: "stats-9/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-9/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-9"
  input: "stats-9/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-9/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-9"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-9/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-9"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-9"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-9/"
    }
  }
}
node {
  name: "tree-9/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-9/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-9"
  input: "tree-9/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-9/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-9"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-9/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-9"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-10"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-10/"
    }
  }
}
node {
  name: "stats-10/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-10/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-10"
  input: "stats-10/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-10/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-10"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-10/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-10"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-10"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-10/"
    }
  }
}
node {
  name: "tree-10/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-10/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-10"
  input: "tree-10/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-10/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-10"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-10/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-10"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-11"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-11/"
    }
  }
}
node {
  name: "stats-11/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-11/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-11"
  input: "stats-11/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-11/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-11"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-11/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-11"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-11"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-11/"
    }
  }
}
node {
  name: "tree-11/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-11/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-11"
  input: "tree-11/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-11/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-11"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-11/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-11"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-12"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-12/"
    }
  }
}
node {
  name: "stats-12/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-12/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-12"
  input: "stats-12/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-12/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-12"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-12/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-12"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-12"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-12/"
    }
  }
}
node {
  name: "tree-12/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-12/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-12"
  input: "tree-12/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-12/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-12"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-12/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-12"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-13"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-13/"
    }
  }
}
node {
  name: "stats-13/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-13/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-13"
  input: "stats-13/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-13/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-13"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-13/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-13"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-13"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-13/"
    }
  }
}
node {
  name: "tree-13/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-13/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-13"
  input: "tree-13/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-13/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-13"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-13/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-13"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-14"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-14/"
    }
  }
}
node {
  name: "stats-14/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-14/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-14"
  input: "stats-14/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-14/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-14"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-14/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-14"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-14"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-14/"
    }
  }
}
node {
  name: "tree-14/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-14/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-14"
  input: "tree-14/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-14/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-14"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-14/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-14"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-15"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-15/"
    }
  }
}
node {
  name: "stats-15/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-15/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-15"
  input: "stats-15/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-15/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-15"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-15/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-15"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-15"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-15/"
    }
  }
}
node {
  name: "tree-15/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-15/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-15"
  input: "tree-15/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-15/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-15"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-15/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-15"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-16"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-16/"
    }
  }
}
node {
  name: "stats-16/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-16/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-16"
  input: "stats-16/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-16/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-16"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-16/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-16"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-16"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-16/"
    }
  }
}
node {
  name: "tree-16/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-16/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-16"
  input: "tree-16/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-16/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-16"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-16/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-16"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-17"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-17/"
    }
  }
}
node {
  name: "stats-17/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-17/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-17"
  input: "stats-17/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-17/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-17"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-17/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-17"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-17"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-17/"
    }
  }
}
node {
  name: "tree-17/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-17/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-17"
  input: "tree-17/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-17/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-17"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-17/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-17"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-18"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-18/"
    }
  }
}
node {
  name: "stats-18/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-18/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-18"
  input: "stats-18/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-18/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-18"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-18/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-18"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-18"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-18/"
    }
  }
}
node {
  name: "tree-18/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-18/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-18"
  input: "tree-18/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-18/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-18"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-18/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-18"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-19"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-19/"
    }
  }
}
node {
  name: "stats-19/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-19/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-19"
  input: "stats-19/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-19/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-19"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-19/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-19"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-19"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-19/"
    }
  }
}
node {
  name: "tree-19/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-19/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-19"
  input: "tree-19/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-19/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-19"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-19/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-19"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-20"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-20/"
    }
  }
}
node {
  name: "stats-20/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-20/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-20"
  input: "stats-20/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-20/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-20"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-20/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-20"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-20"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-20/"
    }
  }
}
node {
  name: "tree-20/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-20/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-20"
  input: "tree-20/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-20/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-20"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-20/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-20"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-21"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-21/"
    }
  }
}
node {
  name: "stats-21/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-21/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-21"
  input: "stats-21/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-21/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-21"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-21/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-21"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-21"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-21/"
    }
  }
}
node {
  name: "tree-21/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-21/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-21"
  input: "tree-21/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-21/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-21"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-21/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-21"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-22"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-22/"
    }
  }
}
node {
  name: "stats-22/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-22/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-22"
  input: "stats-22/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-22/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-22"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-22/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-22"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-22"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-22/"
    }
  }
}
node {
  name: "tree-22/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-22/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-22"
  input: "tree-22/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-22/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-22"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-22/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-22"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-23"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-23/"
    }
  }
}
node {
  name: "stats-23/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-23/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-23"
  input: "stats-23/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-23/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-23"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-23/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-23"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-23"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-23/"
    }
  }
}
node {
  name: "tree-23/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-23/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-23"
  input: "tree-23/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-23/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-23"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-23/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-23"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-24"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-24/"
    }
  }
}
node {
  name: "stats-24/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-24/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-24"
  input: "stats-24/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stats-24/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-24"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-24/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-24"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-24"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-24/"
    }
  }
}
node {
  name: "tree-24/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-24/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-24"
  input: "tree-24/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "tree-24/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-24"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-24/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-24"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat"
  op: "Identity"
  input: "random_shuffle_queue_DequeueMany:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: 188
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4"
  op: "TreePredictionsV4"
  input: "tree-0"
  input: "concat"
  input: "TreePredictionsV4/sparse_input_indices"
  input: "TreePredictionsV4/sparse_input_values"
  input: "TreePredictionsV4/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_1/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_1/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_1/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_1"
  op: "TreePredictionsV4"
  input: "tree-1"
  input: "concat"
  input: "TreePredictionsV4_1/sparse_input_indices"
  input: "TreePredictionsV4_1/sparse_input_values"
  input: "TreePredictionsV4_1/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_2/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_2/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_2/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_2"
  op: "TreePredictionsV4"
  input: "tree-2"
  input: "concat"
  input: "TreePredictionsV4_2/sparse_input_indices"
  input: "TreePredictionsV4_2/sparse_input_values"
  input: "TreePredictionsV4_2/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_3/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_3/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_3/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_3"
  op: "TreePredictionsV4"
  input: "tree-3"
  input: "concat"
  input: "TreePredictionsV4_3/sparse_input_indices"
  input: "TreePredictionsV4_3/sparse_input_values"
  input: "TreePredictionsV4_3/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_4/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_4/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_4/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_4"
  op: "TreePredictionsV4"
  input: "tree-4"
  input: "concat"
  input: "TreePredictionsV4_4/sparse_input_indices"
  input: "TreePredictionsV4_4/sparse_input_values"
  input: "TreePredictionsV4_4/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_5/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_5/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_5/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_5"
  op: "TreePredictionsV4"
  input: "tree-5"
  input: "concat"
  input: "TreePredictionsV4_5/sparse_input_indices"
  input: "TreePredictionsV4_5/sparse_input_values"
  input: "TreePredictionsV4_5/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_6/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_6/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_6/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_6"
  op: "TreePredictionsV4"
  input: "tree-6"
  input: "concat"
  input: "TreePredictionsV4_6/sparse_input_indices"
  input: "TreePredictionsV4_6/sparse_input_values"
  input: "TreePredictionsV4_6/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_7/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_7/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_7/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_7"
  op: "TreePredictionsV4"
  input: "tree-7"
  input: "concat"
  input: "TreePredictionsV4_7/sparse_input_indices"
  input: "TreePredictionsV4_7/sparse_input_values"
  input: "TreePredictionsV4_7/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_8/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_8/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_8/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_8"
  op: "TreePredictionsV4"
  input: "tree-8"
  input: "concat"
  input: "TreePredictionsV4_8/sparse_input_indices"
  input: "TreePredictionsV4_8/sparse_input_values"
  input: "TreePredictionsV4_8/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_9/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_9/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_9/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_9"
  op: "TreePredictionsV4"
  input: "tree-9"
  input: "concat"
  input: "TreePredictionsV4_9/sparse_input_indices"
  input: "TreePredictionsV4_9/sparse_input_values"
  input: "TreePredictionsV4_9/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_10/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_10/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_10/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_10"
  op: "TreePredictionsV4"
  input: "tree-10"
  input: "concat"
  input: "TreePredictionsV4_10/sparse_input_indices"
  input: "TreePredictionsV4_10/sparse_input_values"
  input: "TreePredictionsV4_10/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_11/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_11/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_11/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_11"
  op: "TreePredictionsV4"
  input: "tree-11"
  input: "concat"
  input: "TreePredictionsV4_11/sparse_input_indices"
  input: "TreePredictionsV4_11/sparse_input_values"
  input: "TreePredictionsV4_11/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_12/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_12/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_12/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_12"
  op: "TreePredictionsV4"
  input: "tree-12"
  input: "concat"
  input: "TreePredictionsV4_12/sparse_input_indices"
  input: "TreePredictionsV4_12/sparse_input_values"
  input: "TreePredictionsV4_12/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_13/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_13/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_13/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_13"
  op: "TreePredictionsV4"
  input: "tree-13"
  input: "concat"
  input: "TreePredictionsV4_13/sparse_input_indices"
  input: "TreePredictionsV4_13/sparse_input_values"
  input: "TreePredictionsV4_13/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_14/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_14/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_14/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_14"
  op: "TreePredictionsV4"
  input: "tree-14"
  input: "concat"
  input: "TreePredictionsV4_14/sparse_input_indices"
  input: "TreePredictionsV4_14/sparse_input_values"
  input: "TreePredictionsV4_14/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_15/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_15/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_15/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_15"
  op: "TreePredictionsV4"
  input: "tree-15"
  input: "concat"
  input: "TreePredictionsV4_15/sparse_input_indices"
  input: "TreePredictionsV4_15/sparse_input_values"
  input: "TreePredictionsV4_15/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_16/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_16/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_16/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_16"
  op: "TreePredictionsV4"
  input: "tree-16"
  input: "concat"
  input: "TreePredictionsV4_16/sparse_input_indices"
  input: "TreePredictionsV4_16/sparse_input_values"
  input: "TreePredictionsV4_16/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_17/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_17/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_17/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_17"
  op: "TreePredictionsV4"
  input: "tree-17"
  input: "concat"
  input: "TreePredictionsV4_17/sparse_input_indices"
  input: "TreePredictionsV4_17/sparse_input_values"
  input: "TreePredictionsV4_17/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_18/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_18/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_18/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_18"
  op: "TreePredictionsV4"
  input: "tree-18"
  input: "concat"
  input: "TreePredictionsV4_18/sparse_input_indices"
  input: "TreePredictionsV4_18/sparse_input_values"
  input: "TreePredictionsV4_18/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_19/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_19/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_19/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_19"
  op: "TreePredictionsV4"
  input: "tree-19"
  input: "concat"
  input: "TreePredictionsV4_19/sparse_input_indices"
  input: "TreePredictionsV4_19/sparse_input_values"
  input: "TreePredictionsV4_19/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_20/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_20/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_20/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_20"
  op: "TreePredictionsV4"
  input: "tree-20"
  input: "concat"
  input: "TreePredictionsV4_20/sparse_input_indices"
  input: "TreePredictionsV4_20/sparse_input_values"
  input: "TreePredictionsV4_20/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_21/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_21/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_21/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_21"
  op: "TreePredictionsV4"
  input: "tree-21"
  input: "concat"
  input: "TreePredictionsV4_21/sparse_input_indices"
  input: "TreePredictionsV4_21/sparse_input_values"
  input: "TreePredictionsV4_21/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_22/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_22/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_22/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_22"
  op: "TreePredictionsV4"
  input: "tree-22"
  input: "concat"
  input: "TreePredictionsV4_22/sparse_input_indices"
  input: "TreePredictionsV4_22/sparse_input_values"
  input: "TreePredictionsV4_22/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_23/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_23/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_23/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_23"
  op: "TreePredictionsV4"
  input: "tree-23"
  input: "concat"
  input: "TreePredictionsV4_23/sparse_input_indices"
  input: "TreePredictionsV4_23/sparse_input_values"
  input: "TreePredictionsV4_23/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "TreePredictionsV4_24/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_24/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_24/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_24"
  op: "TreePredictionsV4"
  input: "tree-24"
  input: "concat"
  input: "TreePredictionsV4_24/sparse_input_indices"
  input: "TreePredictionsV4_24/sparse_input_values"
  input: "TreePredictionsV4_24/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "stack"
  op: "Pack"
  input: "TreePredictionsV4"
  input: "TreePredictionsV4_1"
  input: "TreePredictionsV4_2"
  input: "TreePredictionsV4_3"
  input: "TreePredictionsV4_4"
  input: "TreePredictionsV4_5"
  input: "TreePredictionsV4_6"
  input: "TreePredictionsV4_7"
  input: "TreePredictionsV4_8"
  input: "TreePredictionsV4_9"
  input: "TreePredictionsV4_10"
  input: "TreePredictionsV4_11"
  input: "TreePredictionsV4_12"
  input: "TreePredictionsV4_13"
  input: "TreePredictionsV4_14"
  input: "TreePredictionsV4_15"
  input: "TreePredictionsV4_16"
  input: "TreePredictionsV4_17"
  input: "TreePredictionsV4_18"
  input: "TreePredictionsV4_19"
  input: "TreePredictionsV4_20"
  input: "TreePredictionsV4_21"
  input: "TreePredictionsV4_22"
  input: "TreePredictionsV4_23"
  input: "TreePredictionsV4_24"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 25
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: 25
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "Sum/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "stack"
  input: "Sum/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "probabilities/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 25.0
      }
    }
  }
}
node {
  name: "probabilities"
  op: "RealDiv"
  input: "Sum"
  input: "probabilities/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "stack_1"
  op: "Pack"
  input: "TreePredictionsV4:1"
  input: "TreePredictionsV4_1:1"
  input: "TreePredictionsV4_2:1"
  input: "TreePredictionsV4_3:1"
  input: "TreePredictionsV4_4:1"
  input: "TreePredictionsV4_5:1"
  input: "TreePredictionsV4_6:1"
  input: "TreePredictionsV4_7:1"
  input: "TreePredictionsV4_8:1"
  input: "TreePredictionsV4_9:1"
  input: "TreePredictionsV4_10:1"
  input: "TreePredictionsV4_11:1"
  input: "TreePredictionsV4_12:1"
  input: "TreePredictionsV4_13:1"
  input: "TreePredictionsV4_14:1"
  input: "TreePredictionsV4_15:1"
  input: "TreePredictionsV4_16:1"
  input: "TreePredictionsV4_17:1"
  input: "TreePredictionsV4_18:1"
  input: "TreePredictionsV4_19:1"
  input: "TreePredictionsV4_20:1"
  input: "TreePredictionsV4_21:1"
  input: "TreePredictionsV4_22:1"
  input: "TreePredictionsV4_23:1"
  input: "TreePredictionsV4_24:1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 25
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "stack"
  input: "stack"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: 25
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Sum_1/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_1"
  op: "Sum"
  input: "mul"
  input: "Sum_1/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "div/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 25.0
      }
    }
  }
}
node {
  name: "div"
  op: "RealDiv"
  input: "Sum_1"
  input: "div/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "probabilities"
  input: "probabilities"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "div"
  input: "mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Maximum/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Maximum"
  op: "Maximum"
  input: "Maximum/x"
  input: "sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "TreeSize"
  op: "TreeSize"
  input: "tree-0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_1"
  op: "TreeSize"
  input: "tree-1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_2"
  op: "TreeSize"
  input: "tree-2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_3"
  op: "TreeSize"
  input: "tree-3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_4"
  op: "TreeSize"
  input: "tree-4"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_5"
  op: "TreeSize"
  input: "tree-5"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_6"
  op: "TreeSize"
  input: "tree-6"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_7"
  op: "TreeSize"
  input: "tree-7"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_8"
  op: "TreeSize"
  input: "tree-8"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_9"
  op: "TreeSize"
  input: "tree-9"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_10"
  op: "TreeSize"
  input: "tree-10"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_11"
  op: "TreeSize"
  input: "tree-11"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_12"
  op: "TreeSize"
  input: "tree-12"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_13"
  op: "TreeSize"
  input: "tree-13"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_14"
  op: "TreeSize"
  input: "tree-14"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_15"
  op: "TreeSize"
  input: "tree-15"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_16"
  op: "TreeSize"
  input: "tree-16"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_17"
  op: "TreeSize"
  input: "tree-17"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_18"
  op: "TreeSize"
  input: "tree-18"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_19"
  op: "TreeSize"
  input: "tree-19"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_20"
  op: "TreeSize"
  input: "tree-20"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_21"
  op: "TreeSize"
  input: "tree-21"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_22"
  op: "TreeSize"
  input: "tree-22"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_23"
  op: "TreeSize"
  input: "tree-23"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_24"
  op: "TreeSize"
  input: "tree-24"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stack_2"
  op: "Pack"
  input: "TreeSize"
  input: "TreeSize_1"
  input: "TreeSize_2"
  input: "TreeSize_3"
  input: "TreeSize_4"
  input: "TreeSize_5"
  input: "TreeSize_6"
  input: "TreeSize_7"
  input: "TreeSize_8"
  input: "TreeSize_9"
  input: "TreeSize_10"
  input: "TreeSize_11"
  input: "TreeSize_12"
  input: "TreeSize_13"
  input: "TreeSize_14"
  input: "TreeSize_15"
  input: "TreeSize_16"
  input: "TreeSize_17"
  input: "TreeSize_18"
  input: "TreeSize_19"
  input: "TreeSize_20"
  input: "TreeSize_21"
  input: "TreeSize_22"
  input: "TreeSize_23"
  input: "TreeSize_24"
  attr {
    key: "N"
    value {
      i: 25
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "ToFloat"
  op: "Cast"
  input: "stack_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "ToFloat"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "average_tree_size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "average_tree_size"
      }
    }
  }
}
node {
  name: "average_tree_size"
  op: "ScalarSummary"
  input: "average_tree_size/tags"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "concat_1/concat_dim"
  op: "Const"
  input: "^probabilities"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat_1"
  op: "Identity"
  input: "random_shuffle_queue_DequeueMany:1"
  input: "^probabilities"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: 188
          }
        }
      }
    }
  }
}
node {
  name: "ToFloat_1"
  op: "Cast"
  input: "random_shuffle_queue_DequeueMany:2"
  input: "^probabilities"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
}
node {
  name: "ToInt32/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4"
  op: "TraverseTreeV4"
  input: "tree-0"
  input: "concat_1"
  input: "TraverseTreeV4/sparse_input_indices"
  input: "TraverseTreeV4/sparse_input_values"
  input: "TraverseTreeV4/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4"
  op: "UpdateModelV4"
  input: "tree-0"
  input: "TraverseTreeV4"
  input: "ToFloat_1"
  input: "UpdateModelV4/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4"
  op: "ProcessInputV4"
  input: "tree-0"
  input: "stats-0"
  input: "concat_1"
  input: "ProcessInputV4/sparse_input_indices"
  input: "ProcessInputV4/sparse_input_values"
  input: "ProcessInputV4/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4/input_weights"
  input: "TraverseTreeV4"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4"
  op: "GrowTreeV4"
  input: "tree-0"
  input: "stats-0"
  input: "ProcessInputV4"
  input: "^UpdateModelV4"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_1/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_1/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_1/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_1/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_1"
  op: "TraverseTreeV4"
  input: "tree-1"
  input: "concat_1"
  input: "TraverseTreeV4_1/sparse_input_indices"
  input: "TraverseTreeV4_1/sparse_input_values"
  input: "TraverseTreeV4_1/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_1/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_1"
  op: "UpdateModelV4"
  input: "tree-1"
  input: "TraverseTreeV4_1"
  input: "ToFloat_1"
  input: "UpdateModelV4_1/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_1/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_1/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_1/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_1/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_1"
  op: "ProcessInputV4"
  input: "tree-1"
  input: "stats-1"
  input: "concat_1"
  input: "ProcessInputV4_1/sparse_input_indices"
  input: "ProcessInputV4_1/sparse_input_values"
  input: "ProcessInputV4_1/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_1/input_weights"
  input: "TraverseTreeV4_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_1"
  op: "GrowTreeV4"
  input: "tree-1"
  input: "stats-1"
  input: "ProcessInputV4_1"
  input: "^UpdateModelV4_1"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_2/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_2/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_2/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_2/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_2"
  op: "TraverseTreeV4"
  input: "tree-2"
  input: "concat_1"
  input: "TraverseTreeV4_2/sparse_input_indices"
  input: "TraverseTreeV4_2/sparse_input_values"
  input: "TraverseTreeV4_2/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_2/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_2"
  op: "UpdateModelV4"
  input: "tree-2"
  input: "TraverseTreeV4_2"
  input: "ToFloat_1"
  input: "UpdateModelV4_2/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_2/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_2/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_2/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_2/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_2"
  op: "ProcessInputV4"
  input: "tree-2"
  input: "stats-2"
  input: "concat_1"
  input: "ProcessInputV4_2/sparse_input_indices"
  input: "ProcessInputV4_2/sparse_input_values"
  input: "ProcessInputV4_2/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_2/input_weights"
  input: "TraverseTreeV4_2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_2"
  op: "GrowTreeV4"
  input: "tree-2"
  input: "stats-2"
  input: "ProcessInputV4_2"
  input: "^UpdateModelV4_2"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_3/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_3/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_3/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_3/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_3"
  op: "TraverseTreeV4"
  input: "tree-3"
  input: "concat_1"
  input: "TraverseTreeV4_3/sparse_input_indices"
  input: "TraverseTreeV4_3/sparse_input_values"
  input: "TraverseTreeV4_3/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_3/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_3"
  op: "UpdateModelV4"
  input: "tree-3"
  input: "TraverseTreeV4_3"
  input: "ToFloat_1"
  input: "UpdateModelV4_3/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_3/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_3/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_3/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_3/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_3"
  op: "ProcessInputV4"
  input: "tree-3"
  input: "stats-3"
  input: "concat_1"
  input: "ProcessInputV4_3/sparse_input_indices"
  input: "ProcessInputV4_3/sparse_input_values"
  input: "ProcessInputV4_3/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_3/input_weights"
  input: "TraverseTreeV4_3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_3"
  op: "GrowTreeV4"
  input: "tree-3"
  input: "stats-3"
  input: "ProcessInputV4_3"
  input: "^UpdateModelV4_3"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_4/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_4/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_4/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_4/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_4"
  op: "TraverseTreeV4"
  input: "tree-4"
  input: "concat_1"
  input: "TraverseTreeV4_4/sparse_input_indices"
  input: "TraverseTreeV4_4/sparse_input_values"
  input: "TraverseTreeV4_4/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_4/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_4"
  op: "UpdateModelV4"
  input: "tree-4"
  input: "TraverseTreeV4_4"
  input: "ToFloat_1"
  input: "UpdateModelV4_4/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_4/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_4/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_4/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_4/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_4"
  op: "ProcessInputV4"
  input: "tree-4"
  input: "stats-4"
  input: "concat_1"
  input: "ProcessInputV4_4/sparse_input_indices"
  input: "ProcessInputV4_4/sparse_input_values"
  input: "ProcessInputV4_4/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_4/input_weights"
  input: "TraverseTreeV4_4"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_4"
  op: "GrowTreeV4"
  input: "tree-4"
  input: "stats-4"
  input: "ProcessInputV4_4"
  input: "^UpdateModelV4_4"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_5/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_5/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_5/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_5/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_5"
  op: "TraverseTreeV4"
  input: "tree-5"
  input: "concat_1"
  input: "TraverseTreeV4_5/sparse_input_indices"
  input: "TraverseTreeV4_5/sparse_input_values"
  input: "TraverseTreeV4_5/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_5/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_5"
  op: "UpdateModelV4"
  input: "tree-5"
  input: "TraverseTreeV4_5"
  input: "ToFloat_1"
  input: "UpdateModelV4_5/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_5/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_5/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_5/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_5/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_5"
  op: "ProcessInputV4"
  input: "tree-5"
  input: "stats-5"
  input: "concat_1"
  input: "ProcessInputV4_5/sparse_input_indices"
  input: "ProcessInputV4_5/sparse_input_values"
  input: "ProcessInputV4_5/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_5/input_weights"
  input: "TraverseTreeV4_5"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_5"
  op: "GrowTreeV4"
  input: "tree-5"
  input: "stats-5"
  input: "ProcessInputV4_5"
  input: "^UpdateModelV4_5"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_6/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_6/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_6/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_6/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_6"
  op: "TraverseTreeV4"
  input: "tree-6"
  input: "concat_1"
  input: "TraverseTreeV4_6/sparse_input_indices"
  input: "TraverseTreeV4_6/sparse_input_values"
  input: "TraverseTreeV4_6/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_6/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_6"
  op: "UpdateModelV4"
  input: "tree-6"
  input: "TraverseTreeV4_6"
  input: "ToFloat_1"
  input: "UpdateModelV4_6/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_6/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_6/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_6/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_6/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_6"
  op: "ProcessInputV4"
  input: "tree-6"
  input: "stats-6"
  input: "concat_1"
  input: "ProcessInputV4_6/sparse_input_indices"
  input: "ProcessInputV4_6/sparse_input_values"
  input: "ProcessInputV4_6/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_6/input_weights"
  input: "TraverseTreeV4_6"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_6"
  op: "GrowTreeV4"
  input: "tree-6"
  input: "stats-6"
  input: "ProcessInputV4_6"
  input: "^UpdateModelV4_6"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_7/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_7/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_7/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_7/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_7"
  op: "TraverseTreeV4"
  input: "tree-7"
  input: "concat_1"
  input: "TraverseTreeV4_7/sparse_input_indices"
  input: "TraverseTreeV4_7/sparse_input_values"
  input: "TraverseTreeV4_7/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_7/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_7"
  op: "UpdateModelV4"
  input: "tree-7"
  input: "TraverseTreeV4_7"
  input: "ToFloat_1"
  input: "UpdateModelV4_7/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_7/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_7/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_7/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_7/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_7"
  op: "ProcessInputV4"
  input: "tree-7"
  input: "stats-7"
  input: "concat_1"
  input: "ProcessInputV4_7/sparse_input_indices"
  input: "ProcessInputV4_7/sparse_input_values"
  input: "ProcessInputV4_7/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_7/input_weights"
  input: "TraverseTreeV4_7"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_7"
  op: "GrowTreeV4"
  input: "tree-7"
  input: "stats-7"
  input: "ProcessInputV4_7"
  input: "^UpdateModelV4_7"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_8/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_8/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_8/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_8/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_8"
  op: "TraverseTreeV4"
  input: "tree-8"
  input: "concat_1"
  input: "TraverseTreeV4_8/sparse_input_indices"
  input: "TraverseTreeV4_8/sparse_input_values"
  input: "TraverseTreeV4_8/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_8/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_8"
  op: "UpdateModelV4"
  input: "tree-8"
  input: "TraverseTreeV4_8"
  input: "ToFloat_1"
  input: "UpdateModelV4_8/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_8/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_8/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_8/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_8/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_8"
  op: "ProcessInputV4"
  input: "tree-8"
  input: "stats-8"
  input: "concat_1"
  input: "ProcessInputV4_8/sparse_input_indices"
  input: "ProcessInputV4_8/sparse_input_values"
  input: "ProcessInputV4_8/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_8/input_weights"
  input: "TraverseTreeV4_8"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_8"
  op: "GrowTreeV4"
  input: "tree-8"
  input: "stats-8"
  input: "ProcessInputV4_8"
  input: "^UpdateModelV4_8"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_9/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_9/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_9/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_9/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_9"
  op: "TraverseTreeV4"
  input: "tree-9"
  input: "concat_1"
  input: "TraverseTreeV4_9/sparse_input_indices"
  input: "TraverseTreeV4_9/sparse_input_values"
  input: "TraverseTreeV4_9/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_9/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_9"
  op: "UpdateModelV4"
  input: "tree-9"
  input: "TraverseTreeV4_9"
  input: "ToFloat_1"
  input: "UpdateModelV4_9/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_9/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_9/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_9/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_9/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_9"
  op: "ProcessInputV4"
  input: "tree-9"
  input: "stats-9"
  input: "concat_1"
  input: "ProcessInputV4_9/sparse_input_indices"
  input: "ProcessInputV4_9/sparse_input_values"
  input: "ProcessInputV4_9/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_9/input_weights"
  input: "TraverseTreeV4_9"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_9"
  op: "GrowTreeV4"
  input: "tree-9"
  input: "stats-9"
  input: "ProcessInputV4_9"
  input: "^UpdateModelV4_9"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_10/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_10/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_10/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_10/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_10"
  op: "TraverseTreeV4"
  input: "tree-10"
  input: "concat_1"
  input: "TraverseTreeV4_10/sparse_input_indices"
  input: "TraverseTreeV4_10/sparse_input_values"
  input: "TraverseTreeV4_10/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_10/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_10"
  op: "UpdateModelV4"
  input: "tree-10"
  input: "TraverseTreeV4_10"
  input: "ToFloat_1"
  input: "UpdateModelV4_10/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_10/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_10/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_10/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_10/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_10"
  op: "ProcessInputV4"
  input: "tree-10"
  input: "stats-10"
  input: "concat_1"
  input: "ProcessInputV4_10/sparse_input_indices"
  input: "ProcessInputV4_10/sparse_input_values"
  input: "ProcessInputV4_10/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_10/input_weights"
  input: "TraverseTreeV4_10"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_10"
  op: "GrowTreeV4"
  input: "tree-10"
  input: "stats-10"
  input: "ProcessInputV4_10"
  input: "^UpdateModelV4_10"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_11/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_11/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_11/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_11/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_11"
  op: "TraverseTreeV4"
  input: "tree-11"
  input: "concat_1"
  input: "TraverseTreeV4_11/sparse_input_indices"
  input: "TraverseTreeV4_11/sparse_input_values"
  input: "TraverseTreeV4_11/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_11/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_11"
  op: "UpdateModelV4"
  input: "tree-11"
  input: "TraverseTreeV4_11"
  input: "ToFloat_1"
  input: "UpdateModelV4_11/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_11/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_11/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_11/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_11/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_11"
  op: "ProcessInputV4"
  input: "tree-11"
  input: "stats-11"
  input: "concat_1"
  input: "ProcessInputV4_11/sparse_input_indices"
  input: "ProcessInputV4_11/sparse_input_values"
  input: "ProcessInputV4_11/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_11/input_weights"
  input: "TraverseTreeV4_11"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_11"
  op: "GrowTreeV4"
  input: "tree-11"
  input: "stats-11"
  input: "ProcessInputV4_11"
  input: "^UpdateModelV4_11"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_12/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_12/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_12/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_12/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_12"
  op: "TraverseTreeV4"
  input: "tree-12"
  input: "concat_1"
  input: "TraverseTreeV4_12/sparse_input_indices"
  input: "TraverseTreeV4_12/sparse_input_values"
  input: "TraverseTreeV4_12/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_12/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_12"
  op: "UpdateModelV4"
  input: "tree-12"
  input: "TraverseTreeV4_12"
  input: "ToFloat_1"
  input: "UpdateModelV4_12/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_12/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_12/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_12/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_12/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_12"
  op: "ProcessInputV4"
  input: "tree-12"
  input: "stats-12"
  input: "concat_1"
  input: "ProcessInputV4_12/sparse_input_indices"
  input: "ProcessInputV4_12/sparse_input_values"
  input: "ProcessInputV4_12/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_12/input_weights"
  input: "TraverseTreeV4_12"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_12"
  op: "GrowTreeV4"
  input: "tree-12"
  input: "stats-12"
  input: "ProcessInputV4_12"
  input: "^UpdateModelV4_12"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_13/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_13/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_13/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_13/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_13"
  op: "TraverseTreeV4"
  input: "tree-13"
  input: "concat_1"
  input: "TraverseTreeV4_13/sparse_input_indices"
  input: "TraverseTreeV4_13/sparse_input_values"
  input: "TraverseTreeV4_13/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_13/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_13"
  op: "UpdateModelV4"
  input: "tree-13"
  input: "TraverseTreeV4_13"
  input: "ToFloat_1"
  input: "UpdateModelV4_13/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_13/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_13/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_13/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_13/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_13"
  op: "ProcessInputV4"
  input: "tree-13"
  input: "stats-13"
  input: "concat_1"
  input: "ProcessInputV4_13/sparse_input_indices"
  input: "ProcessInputV4_13/sparse_input_values"
  input: "ProcessInputV4_13/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_13/input_weights"
  input: "TraverseTreeV4_13"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_13"
  op: "GrowTreeV4"
  input: "tree-13"
  input: "stats-13"
  input: "ProcessInputV4_13"
  input: "^UpdateModelV4_13"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_14/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_14/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_14/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_14/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_14"
  op: "TraverseTreeV4"
  input: "tree-14"
  input: "concat_1"
  input: "TraverseTreeV4_14/sparse_input_indices"
  input: "TraverseTreeV4_14/sparse_input_values"
  input: "TraverseTreeV4_14/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_14/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_14"
  op: "UpdateModelV4"
  input: "tree-14"
  input: "TraverseTreeV4_14"
  input: "ToFloat_1"
  input: "UpdateModelV4_14/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_14/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_14/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_14/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_14/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_14"
  op: "ProcessInputV4"
  input: "tree-14"
  input: "stats-14"
  input: "concat_1"
  input: "ProcessInputV4_14/sparse_input_indices"
  input: "ProcessInputV4_14/sparse_input_values"
  input: "ProcessInputV4_14/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_14/input_weights"
  input: "TraverseTreeV4_14"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_14"
  op: "GrowTreeV4"
  input: "tree-14"
  input: "stats-14"
  input: "ProcessInputV4_14"
  input: "^UpdateModelV4_14"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_15/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_15/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_15/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_15/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_15"
  op: "TraverseTreeV4"
  input: "tree-15"
  input: "concat_1"
  input: "TraverseTreeV4_15/sparse_input_indices"
  input: "TraverseTreeV4_15/sparse_input_values"
  input: "TraverseTreeV4_15/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_15/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_15"
  op: "UpdateModelV4"
  input: "tree-15"
  input: "TraverseTreeV4_15"
  input: "ToFloat_1"
  input: "UpdateModelV4_15/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_15/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_15/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_15/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_15/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_15"
  op: "ProcessInputV4"
  input: "tree-15"
  input: "stats-15"
  input: "concat_1"
  input: "ProcessInputV4_15/sparse_input_indices"
  input: "ProcessInputV4_15/sparse_input_values"
  input: "ProcessInputV4_15/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_15/input_weights"
  input: "TraverseTreeV4_15"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_15"
  op: "GrowTreeV4"
  input: "tree-15"
  input: "stats-15"
  input: "ProcessInputV4_15"
  input: "^UpdateModelV4_15"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_16/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_16/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_16/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_16/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_16"
  op: "TraverseTreeV4"
  input: "tree-16"
  input: "concat_1"
  input: "TraverseTreeV4_16/sparse_input_indices"
  input: "TraverseTreeV4_16/sparse_input_values"
  input: "TraverseTreeV4_16/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_16/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_16"
  op: "UpdateModelV4"
  input: "tree-16"
  input: "TraverseTreeV4_16"
  input: "ToFloat_1"
  input: "UpdateModelV4_16/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_16/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_16/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_16/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_16/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_16"
  op: "ProcessInputV4"
  input: "tree-16"
  input: "stats-16"
  input: "concat_1"
  input: "ProcessInputV4_16/sparse_input_indices"
  input: "ProcessInputV4_16/sparse_input_values"
  input: "ProcessInputV4_16/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_16/input_weights"
  input: "TraverseTreeV4_16"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_16"
  op: "GrowTreeV4"
  input: "tree-16"
  input: "stats-16"
  input: "ProcessInputV4_16"
  input: "^UpdateModelV4_16"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_17/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_17/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_17/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_17/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_17"
  op: "TraverseTreeV4"
  input: "tree-17"
  input: "concat_1"
  input: "TraverseTreeV4_17/sparse_input_indices"
  input: "TraverseTreeV4_17/sparse_input_values"
  input: "TraverseTreeV4_17/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_17/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_17"
  op: "UpdateModelV4"
  input: "tree-17"
  input: "TraverseTreeV4_17"
  input: "ToFloat_1"
  input: "UpdateModelV4_17/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_17/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_17/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_17/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_17/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_17"
  op: "ProcessInputV4"
  input: "tree-17"
  input: "stats-17"
  input: "concat_1"
  input: "ProcessInputV4_17/sparse_input_indices"
  input: "ProcessInputV4_17/sparse_input_values"
  input: "ProcessInputV4_17/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_17/input_weights"
  input: "TraverseTreeV4_17"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_17"
  op: "GrowTreeV4"
  input: "tree-17"
  input: "stats-17"
  input: "ProcessInputV4_17"
  input: "^UpdateModelV4_17"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_18/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_18/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_18/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_18/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_18"
  op: "TraverseTreeV4"
  input: "tree-18"
  input: "concat_1"
  input: "TraverseTreeV4_18/sparse_input_indices"
  input: "TraverseTreeV4_18/sparse_input_values"
  input: "TraverseTreeV4_18/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_18/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_18"
  op: "UpdateModelV4"
  input: "tree-18"
  input: "TraverseTreeV4_18"
  input: "ToFloat_1"
  input: "UpdateModelV4_18/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_18/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_18/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_18/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_18/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_18"
  op: "ProcessInputV4"
  input: "tree-18"
  input: "stats-18"
  input: "concat_1"
  input: "ProcessInputV4_18/sparse_input_indices"
  input: "ProcessInputV4_18/sparse_input_values"
  input: "ProcessInputV4_18/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_18/input_weights"
  input: "TraverseTreeV4_18"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_18"
  op: "GrowTreeV4"
  input: "tree-18"
  input: "stats-18"
  input: "ProcessInputV4_18"
  input: "^UpdateModelV4_18"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_19/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_19/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_19/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_19/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_19"
  op: "TraverseTreeV4"
  input: "tree-19"
  input: "concat_1"
  input: "TraverseTreeV4_19/sparse_input_indices"
  input: "TraverseTreeV4_19/sparse_input_values"
  input: "TraverseTreeV4_19/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_19/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_19"
  op: "UpdateModelV4"
  input: "tree-19"
  input: "TraverseTreeV4_19"
  input: "ToFloat_1"
  input: "UpdateModelV4_19/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_19/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_19/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_19/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_19/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_19"
  op: "ProcessInputV4"
  input: "tree-19"
  input: "stats-19"
  input: "concat_1"
  input: "ProcessInputV4_19/sparse_input_indices"
  input: "ProcessInputV4_19/sparse_input_values"
  input: "ProcessInputV4_19/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_19/input_weights"
  input: "TraverseTreeV4_19"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_19"
  op: "GrowTreeV4"
  input: "tree-19"
  input: "stats-19"
  input: "ProcessInputV4_19"
  input: "^UpdateModelV4_19"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_20/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_20/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_20/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_20/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_20"
  op: "TraverseTreeV4"
  input: "tree-20"
  input: "concat_1"
  input: "TraverseTreeV4_20/sparse_input_indices"
  input: "TraverseTreeV4_20/sparse_input_values"
  input: "TraverseTreeV4_20/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_20/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_20"
  op: "UpdateModelV4"
  input: "tree-20"
  input: "TraverseTreeV4_20"
  input: "ToFloat_1"
  input: "UpdateModelV4_20/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_20/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_20/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_20/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_20/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_20"
  op: "ProcessInputV4"
  input: "tree-20"
  input: "stats-20"
  input: "concat_1"
  input: "ProcessInputV4_20/sparse_input_indices"
  input: "ProcessInputV4_20/sparse_input_values"
  input: "ProcessInputV4_20/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_20/input_weights"
  input: "TraverseTreeV4_20"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_20"
  op: "GrowTreeV4"
  input: "tree-20"
  input: "stats-20"
  input: "ProcessInputV4_20"
  input: "^UpdateModelV4_20"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_21/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_21/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_21/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_21/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_21"
  op: "TraverseTreeV4"
  input: "tree-21"
  input: "concat_1"
  input: "TraverseTreeV4_21/sparse_input_indices"
  input: "TraverseTreeV4_21/sparse_input_values"
  input: "TraverseTreeV4_21/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_21/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_21"
  op: "UpdateModelV4"
  input: "tree-21"
  input: "TraverseTreeV4_21"
  input: "ToFloat_1"
  input: "UpdateModelV4_21/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_21/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_21/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_21/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_21/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_21"
  op: "ProcessInputV4"
  input: "tree-21"
  input: "stats-21"
  input: "concat_1"
  input: "ProcessInputV4_21/sparse_input_indices"
  input: "ProcessInputV4_21/sparse_input_values"
  input: "ProcessInputV4_21/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_21/input_weights"
  input: "TraverseTreeV4_21"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_21"
  op: "GrowTreeV4"
  input: "tree-21"
  input: "stats-21"
  input: "ProcessInputV4_21"
  input: "^UpdateModelV4_21"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_22/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_22/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_22/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_22/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_22"
  op: "TraverseTreeV4"
  input: "tree-22"
  input: "concat_1"
  input: "TraverseTreeV4_22/sparse_input_indices"
  input: "TraverseTreeV4_22/sparse_input_values"
  input: "TraverseTreeV4_22/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_22/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_22"
  op: "UpdateModelV4"
  input: "tree-22"
  input: "TraverseTreeV4_22"
  input: "ToFloat_1"
  input: "UpdateModelV4_22/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_22/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_22/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_22/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_22/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_22"
  op: "ProcessInputV4"
  input: "tree-22"
  input: "stats-22"
  input: "concat_1"
  input: "ProcessInputV4_22/sparse_input_indices"
  input: "ProcessInputV4_22/sparse_input_values"
  input: "ProcessInputV4_22/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_22/input_weights"
  input: "TraverseTreeV4_22"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_22"
  op: "GrowTreeV4"
  input: "tree-22"
  input: "stats-22"
  input: "ProcessInputV4_22"
  input: "^UpdateModelV4_22"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_23/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_23/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_23/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_23/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_23"
  op: "TraverseTreeV4"
  input: "tree-23"
  input: "concat_1"
  input: "TraverseTreeV4_23/sparse_input_indices"
  input: "TraverseTreeV4_23/sparse_input_values"
  input: "TraverseTreeV4_23/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_23/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_23"
  op: "UpdateModelV4"
  input: "tree-23"
  input: "TraverseTreeV4_23"
  input: "ToFloat_1"
  input: "UpdateModelV4_23/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_23/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_23/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_23/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_23/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_23"
  op: "ProcessInputV4"
  input: "tree-23"
  input: "stats-23"
  input: "concat_1"
  input: "ProcessInputV4_23/sparse_input_indices"
  input: "ProcessInputV4_23/sparse_input_values"
  input: "ProcessInputV4_23/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_23/input_weights"
  input: "TraverseTreeV4_23"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_23"
  op: "GrowTreeV4"
  input: "tree-23"
  input: "stats-23"
  input: "ProcessInputV4_23"
  input: "^UpdateModelV4_23"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ToInt32_24/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_24/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_24/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_24/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_24"
  op: "TraverseTreeV4"
  input: "tree-24"
  input: "concat_1"
  input: "TraverseTreeV4_24/sparse_input_indices"
  input: "TraverseTreeV4_24/sparse_input_values"
  input: "TraverseTreeV4_24/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "UpdateModelV4_24/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_24"
  op: "UpdateModelV4"
  input: "tree-24"
  input: "TraverseTreeV4_24"
  input: "ToFloat_1"
  input: "UpdateModelV4_24/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "ProcessInputV4_24/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_24/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_24/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_24/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_24"
  op: "ProcessInputV4"
  input: "tree-24"
  input: "stats-24"
  input: "concat_1"
  input: "ProcessInputV4_24/sparse_input_indices"
  input: "ProcessInputV4_24/sparse_input_values"
  input: "ProcessInputV4_24/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_24/input_weights"
  input: "TraverseTreeV4_24"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 188 dense: [{name: x original_type: 0 size: 188}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_24"
  op: "GrowTreeV4"
  input: "tree-24"
  input: "stats-24"
  input: "ProcessInputV4_24"
  input: "^UpdateModelV4_24"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "train"
  op: "NoOp"
  input: "^GrowTreeV4"
  input: "^GrowTreeV4_1"
  input: "^GrowTreeV4_10"
  input: "^GrowTreeV4_11"
  input: "^GrowTreeV4_12"
  input: "^GrowTreeV4_13"
  input: "^GrowTreeV4_14"
  input: "^GrowTreeV4_15"
  input: "^GrowTreeV4_16"
  input: "^GrowTreeV4_17"
  input: "^GrowTreeV4_18"
  input: "^GrowTreeV4_19"
  input: "^GrowTreeV4_2"
  input: "^GrowTreeV4_20"
  input: "^GrowTreeV4_21"
  input: "^GrowTreeV4_22"
  input: "^GrowTreeV4_23"
  input: "^GrowTreeV4_24"
  input: "^GrowTreeV4_3"
  input: "^GrowTreeV4_4"
  input: "^GrowTreeV4_5"
  input: "^GrowTreeV4_6"
  input: "^GrowTreeV4_7"
  input: "^GrowTreeV4_8"
  input: "^GrowTreeV4_9"
  input: "^probabilities"
  device: "/device:CPU:0"
}
node {
  name: "AssignAdd/value"
  op: "Const"
  input: "^probabilities"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "AssignAdd"
  op: "AssignAdd"
  input: "global_step"
  input: "AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps/NoOp"
  op: "NoOp"
  input: "^AssignAdd"
  input: "^probabilities"
}
node {
  name: "group_deps/NoOp_1"
  op: "NoOp"
  input: "^probabilities"
  input: "^train"
  device: "/device:CPU:0"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^group_deps/NoOp"
  input: "^group_deps/NoOp_1"
  input: "^probabilities"
}
node {
  name: "multi_class_head/predictions/classes/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "multi_class_head/predictions/classes"
  op: "ArgMax"
  input: "probabilities"
  input: "multi_class_head/predictions/classes/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "multi_class_head/predictions/probabilities"
  op: "Softmax"
  input: "probabilities"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "multi_class_head/softmax_cross_entropy_loss/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2000
      }
    }
  }
}
node {
  name: "multi_class_head/softmax_cross_entropy_loss"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "probabilities"
  input: "random_shuffle_queue_DequeueMany:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
        shape {
          dim {
            size: 2000
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "multi_class_head/softmax_cross_entropy_loss/loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "multi_class_head/softmax_cross_entropy_loss/loss"
  op: "Mean"
  input: "multi_class_head/softmax_cross_entropy_loss"
  input: "multi_class_head/softmax_cross_entropy_loss/loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "multi_class_head/softmax_cross_entropy_loss/loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/Shape"
  op: "Shape"
  input: "probabilities"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "multi_class_head/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "multi_class_head/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "multi_class_head/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "multi_class_head/strided_slice"
  op: "StridedSlice"
  input: "multi_class_head/Shape"
  input: "multi_class_head/strided_slice/stack"
  input: "multi_class_head/strided_slice/stack_1"
  input: "multi_class_head/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/total/Assign"
  op: "Assign"
  input: "multi_class_head/metrics/mean/total"
  input: "multi_class_head/metrics/mean/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/total/read"
  op: "Identity"
  input: "multi_class_head/metrics/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/count/Assign"
  op: "Assign"
  input: "multi_class_head/metrics/mean/count"
  input: "multi_class_head/metrics/mean/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/count/read"
  op: "Identity"
  input: "multi_class_head/metrics/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/ToFloat_1"
  op: "Cast"
  input: "multi_class_head/metrics/mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/Sum"
  op: "Sum"
  input: "multi_class_head/softmax_cross_entropy_loss/loss"
  input: "multi_class_head/metrics/mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/AssignAdd"
  op: "AssignAdd"
  input: "multi_class_head/metrics/mean/total"
  input: "multi_class_head/metrics/mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "multi_class_head/metrics/mean/count"
  input: "multi_class_head/metrics/mean/ToFloat_1"
  input: "^multi_class_head/softmax_cross_entropy_loss/loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/truediv"
  op: "RealDiv"
  input: "multi_class_head/metrics/mean/total/read"
  input: "multi_class_head/metrics/mean/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/Greater"
  op: "Greater"
  input: "multi_class_head/metrics/mean/count/read"
  input: "multi_class_head/metrics/mean/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/value"
  op: "Select"
  input: "multi_class_head/metrics/mean/Greater"
  input: "multi_class_head/metrics/mean/truediv"
  input: "multi_class_head/metrics/mean/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/truediv_1"
  op: "RealDiv"
  input: "multi_class_head/metrics/mean/AssignAdd"
  input: "multi_class_head/metrics/mean/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/zeros_like_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/Greater_1"
  op: "Greater"
  input: "multi_class_head/metrics/mean/AssignAdd_1"
  input: "multi_class_head/metrics/mean/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/update_op"
  op: "Select"
  input: "multi_class_head/metrics/mean/Greater_1"
  input: "multi_class_head/metrics/mean/truediv_1"
  input: "multi_class_head/metrics/mean/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/Equal"
  op: "Equal"
  input: "multi_class_head/predictions/classes"
  input: "random_shuffle_queue_DequeueMany:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/ToFloat"
  op: "Cast"
  input: "multi_class_head/metrics/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2000
          }
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/total/Assign"
  op: "Assign"
  input: "multi_class_head/metrics/accuracy/total"
  input: "multi_class_head/metrics/accuracy/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/total/read"
  op: "Identity"
  input: "multi_class_head/metrics/accuracy/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/count/Assign"
  op: "Assign"
  input: "multi_class_head/metrics/accuracy/count"
  input: "multi_class_head/metrics/accuracy/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/count/read"
  op: "Identity"
  input: "multi_class_head/metrics/accuracy/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2000
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/ToFloat_1"
  op: "Cast"
  input: "multi_class_head/metrics/accuracy/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/Sum"
  op: "Sum"
  input: "multi_class_head/metrics/ToFloat"
  input: "multi_class_head/metrics/accuracy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/AssignAdd"
  op: "AssignAdd"
  input: "multi_class_head/metrics/accuracy/total"
  input: "multi_class_head/metrics/accuracy/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/AssignAdd_1"
  op: "AssignAdd"
  input: "multi_class_head/metrics/accuracy/count"
  input: "multi_class_head/metrics/accuracy/ToFloat_1"
  input: "^multi_class_head/metrics/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/truediv"
  op: "RealDiv"
  input: "multi_class_head/metrics/accuracy/total/read"
  input: "multi_class_head/metrics/accuracy/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/Greater"
  op: "Greater"
  input: "multi_class_head/metrics/accuracy/count/read"
  input: "multi_class_head/metrics/accuracy/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/value"
  op: "Select"
  input: "multi_class_head/metrics/accuracy/Greater"
  input: "multi_class_head/metrics/accuracy/truediv"
  input: "multi_class_head/metrics/accuracy/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/truediv_1"
  op: "RealDiv"
  input: "multi_class_head/metrics/accuracy/AssignAdd"
  input: "multi_class_head/metrics/accuracy/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/zeros_like_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/Greater_1"
  op: "Greater"
  input: "multi_class_head/metrics/accuracy/AssignAdd_1"
  input: "multi_class_head/metrics/accuracy/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/update_op"
  op: "Select"
  input: "multi_class_head/metrics/accuracy/Greater_1"
  input: "multi_class_head/metrics/accuracy/truediv_1"
  input: "multi_class_head/metrics/accuracy/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/Shape"
  op: "Shape"
  input: "multi_class_head/predictions/probabilities"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/strided_slice"
  op: "StridedSlice"
  input: "multi_class_head/_classification_output_alternatives/Shape"
  input: "multi_class_head/_classification_output_alternatives/strided_slice/stack"
  input: "multi_class_head/_classification_output_alternatives/strided_slice/stack_1"
  input: "multi_class_head/_classification_output_alternatives/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/Shape_1"
  op: "Shape"
  input: "multi_class_head/predictions/probabilities"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/strided_slice_1"
  op: "StridedSlice"
  input: "multi_class_head/_classification_output_alternatives/Shape_1"
  input: "multi_class_head/_classification_output_alternatives/strided_slice_1/stack"
  input: "multi_class_head/_classification_output_alternatives/strided_slice_1/stack_1"
  input: "multi_class_head/_classification_output_alternatives/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/range"
  op: "Range"
  input: "multi_class_head/_classification_output_alternatives/range/start"
  input: "multi_class_head/_classification_output_alternatives/strided_slice_1"
  input: "multi_class_head/_classification_output_alternatives/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/ExpandDims"
  op: "ExpandDims"
  input: "multi_class_head/_classification_output_alternatives/range"
  input: "multi_class_head/_classification_output_alternatives/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/Tile/multiples/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/Tile/multiples"
  op: "Pack"
  input: "multi_class_head/_classification_output_alternatives/strided_slice"
  input: "multi_class_head/_classification_output_alternatives/Tile/multiples/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/Tile"
  op: "Tile"
  input: "multi_class_head/_classification_output_alternatives/ExpandDims"
  input: "multi_class_head/_classification_output_alternatives/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/classes_tensor"
  op: "AsString"
  input: "multi_class_head/_classification_output_alternatives/Tile"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "fill"
    value {
      s: ""
    }
  }
  attr {
    key: "precision"
    value {
      i: -1
    }
  }
  attr {
    key: "scientific"
    value {
      b: false
    }
  }
  attr {
    key: "shortest"
    value {
      b: false
    }
  }
  attr {
    key: "width"
    value {
      i: -1
    }
  }
}
node {
  name: "DestroyResourceOp"
  op: "DestroyResourceOp"
  input: "tree-0"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_1"
  op: "DestroyResourceOp"
  input: "tree-1"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_2"
  op: "DestroyResourceOp"
  input: "tree-2"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_3"
  op: "DestroyResourceOp"
  input: "tree-3"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_4"
  op: "DestroyResourceOp"
  input: "tree-4"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_5"
  op: "DestroyResourceOp"
  input: "tree-5"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_6"
  op: "DestroyResourceOp"
  input: "tree-6"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_7"
  op: "DestroyResourceOp"
  input: "tree-7"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_8"
  op: "DestroyResourceOp"
  input: "tree-8"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_9"
  op: "DestroyResourceOp"
  input: "tree-9"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_10"
  op: "DestroyResourceOp"
  input: "tree-10"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_11"
  op: "DestroyResourceOp"
  input: "tree-11"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_12"
  op: "DestroyResourceOp"
  input: "tree-12"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_13"
  op: "DestroyResourceOp"
  input: "tree-13"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_14"
  op: "DestroyResourceOp"
  input: "tree-14"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_15"
  op: "DestroyResourceOp"
  input: "tree-15"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_16"
  op: "DestroyResourceOp"
  input: "tree-16"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_17"
  op: "DestroyResourceOp"
  input: "tree-17"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_18"
  op: "DestroyResourceOp"
  input: "tree-18"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_19"
  op: "DestroyResourceOp"
  input: "tree-19"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_20"
  op: "DestroyResourceOp"
  input: "tree-20"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_21"
  op: "DestroyResourceOp"
  input: "tree-21"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_22"
  op: "DestroyResourceOp"
  input: "tree-22"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_23"
  op: "DestroyResourceOp"
  input: "tree-23"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_24"
  op: "DestroyResourceOp"
  input: "tree-24"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_25"
  op: "DestroyResourceOp"
  input: "stats-0"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_26"
  op: "DestroyResourceOp"
  input: "stats-1"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_27"
  op: "DestroyResourceOp"
  input: "stats-2"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_28"
  op: "DestroyResourceOp"
  input: "stats-3"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_29"
  op: "DestroyResourceOp"
  input: "stats-4"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_30"
  op: "DestroyResourceOp"
  input: "stats-5"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_31"
  op: "DestroyResourceOp"
  input: "stats-6"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_32"
  op: "DestroyResourceOp"
  input: "stats-7"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_33"
  op: "DestroyResourceOp"
  input: "stats-8"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_34"
  op: "DestroyResourceOp"
  input: "stats-9"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_35"
  op: "DestroyResourceOp"
  input: "stats-10"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_36"
  op: "DestroyResourceOp"
  input: "stats-11"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_37"
  op: "DestroyResourceOp"
  input: "stats-12"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_38"
  op: "DestroyResourceOp"
  input: "stats-13"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_39"
  op: "DestroyResourceOp"
  input: "stats-14"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_40"
  op: "DestroyResourceOp"
  input: "stats-15"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_41"
  op: "DestroyResourceOp"
  input: "stats-16"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_42"
  op: "DestroyResourceOp"
  input: "stats-17"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_43"
  op: "DestroyResourceOp"
  input: "stats-18"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_44"
  op: "DestroyResourceOp"
  input: "stats-19"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_45"
  op: "DestroyResourceOp"
  input: "stats-20"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_46"
  op: "DestroyResourceOp"
  input: "stats-21"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_47"
  op: "DestroyResourceOp"
  input: "stats-22"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_48"
  op: "DestroyResourceOp"
  input: "stats-23"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_49"
  op: "DestroyResourceOp"
  input: "stats-24"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^DestroyResourceOp"
  input: "^DestroyResourceOp_1"
  input: "^DestroyResourceOp_10"
  input: "^DestroyResourceOp_11"
  input: "^DestroyResourceOp_12"
  input: "^DestroyResourceOp_13"
  input: "^DestroyResourceOp_14"
  input: "^DestroyResourceOp_15"
  input: "^DestroyResourceOp_16"
  input: "^DestroyResourceOp_17"
  input: "^DestroyResourceOp_18"
  input: "^DestroyResourceOp_19"
  input: "^DestroyResourceOp_2"
  input: "^DestroyResourceOp_20"
  input: "^DestroyResourceOp_21"
  input: "^DestroyResourceOp_22"
  input: "^DestroyResourceOp_23"
  input: "^DestroyResourceOp_24"
  input: "^DestroyResourceOp_25"
  input: "^DestroyResourceOp_26"
  input: "^DestroyResourceOp_27"
  input: "^DestroyResourceOp_28"
  input: "^DestroyResourceOp_29"
  input: "^DestroyResourceOp_3"
  input: "^DestroyResourceOp_30"
  input: "^DestroyResourceOp_31"
  input: "^DestroyResourceOp_32"
  input: "^DestroyResourceOp_33"
  input: "^DestroyResourceOp_34"
  input: "^DestroyResourceOp_35"
  input: "^DestroyResourceOp_36"
  input: "^DestroyResourceOp_37"
  input: "^DestroyResourceOp_38"
  input: "^DestroyResourceOp_39"
  input: "^DestroyResourceOp_4"
  input: "^DestroyResourceOp_40"
  input: "^DestroyResourceOp_41"
  input: "^DestroyResourceOp_42"
  input: "^DestroyResourceOp_43"
  input: "^DestroyResourceOp_44"
  input: "^DestroyResourceOp_45"
  input: "^DestroyResourceOp_46"
  input: "^DestroyResourceOp_47"
  input: "^DestroyResourceOp_48"
  input: "^DestroyResourceOp_49"
  input: "^DestroyResourceOp_5"
  input: "^DestroyResourceOp_6"
  input: "^DestroyResourceOp_7"
  input: "^DestroyResourceOp_8"
  input: "^DestroyResourceOp_9"
}
node {
  name: "init/NoOp"
  op: "NoOp"
  input: "^global_step/Assign"
}
node {
  name: "init/NoOp_1"
  op: "NoOp"
  input: "^device_dummy_0/Assign"
  input: "^device_dummy_1/Assign"
  input: "^device_dummy_10/Assign"
  input: "^device_dummy_11/Assign"
  input: "^device_dummy_12/Assign"
  input: "^device_dummy_13/Assign"
  input: "^device_dummy_14/Assign"
  input: "^device_dummy_15/Assign"
  input: "^device_dummy_16/Assign"
  input: "^device_dummy_17/Assign"
  input: "^device_dummy_18/Assign"
  input: "^device_dummy_19/Assign"
  input: "^device_dummy_2/Assign"
  input: "^device_dummy_20/Assign"
  input: "^device_dummy_21/Assign"
  input: "^device_dummy_22/Assign"
  input: "^device_dummy_23/Assign"
  input: "^device_dummy_24/Assign"
  input: "^device_dummy_3/Assign"
  input: "^device_dummy_4/Assign"
  input: "^device_dummy_5/Assign"
  input: "^device_dummy_6/Assign"
  input: "^device_dummy_7/Assign"
  input: "^device_dummy_8/Assign"
  input: "^device_dummy_9/Assign"
  device: "/device:CPU:0"
}
node {
  name: "init"
  op: "NoOp"
  input: "^init/NoOp"
  input: "^init/NoOp_1"
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^stats-0/CreateFertileStatsVariable"
  input: "^stats-1/CreateFertileStatsVariable"
  input: "^stats-10/CreateFertileStatsVariable"
  input: "^stats-11/CreateFertileStatsVariable"
  input: "^stats-12/CreateFertileStatsVariable"
  input: "^stats-13/CreateFertileStatsVariable"
  input: "^stats-14/CreateFertileStatsVariable"
  input: "^stats-15/CreateFertileStatsVariable"
  input: "^stats-16/CreateFertileStatsVariable"
  input: "^stats-17/CreateFertileStatsVariable"
  input: "^stats-18/CreateFertileStatsVariable"
  input: "^stats-19/CreateFertileStatsVariable"
  input: "^stats-2/CreateFertileStatsVariable"
  input: "^stats-20/CreateFertileStatsVariable"
  input: "^stats-21/CreateFertileStatsVariable"
  input: "^stats-22/CreateFertileStatsVariable"
  input: "^stats-23/CreateFertileStatsVariable"
  input: "^stats-24/CreateFertileStatsVariable"
  input: "^stats-3/CreateFertileStatsVariable"
  input: "^stats-4/CreateFertileStatsVariable"
  input: "^stats-5/CreateFertileStatsVariable"
  input: "^stats-6/CreateFertileStatsVariable"
  input: "^stats-7/CreateFertileStatsVariable"
  input: "^stats-8/CreateFertileStatsVariable"
  input: "^stats-9/CreateFertileStatsVariable"
  input: "^tree-0/CreateTreeVariable"
  input: "^tree-1/CreateTreeVariable"
  input: "^tree-10/CreateTreeVariable"
  input: "^tree-11/CreateTreeVariable"
  input: "^tree-12/CreateTreeVariable"
  input: "^tree-13/CreateTreeVariable"
  input: "^tree-14/CreateTreeVariable"
  input: "^tree-15/CreateTreeVariable"
  input: "^tree-16/CreateTreeVariable"
  input: "^tree-17/CreateTreeVariable"
  input: "^tree-18/CreateTreeVariable"
  input: "^tree-19/CreateTreeVariable"
  input: "^tree-2/CreateTreeVariable"
  input: "^tree-20/CreateTreeVariable"
  input: "^tree-21/CreateTreeVariable"
  input: "^tree-22/CreateTreeVariable"
  input: "^tree-23/CreateTreeVariable"
  input: "^tree-24/CreateTreeVariable"
  input: "^tree-3/CreateTreeVariable"
  input: "^tree-4/CreateTreeVariable"
  input: "^tree-5/CreateTreeVariable"
  input: "^tree-6/CreateTreeVariable"
  input: "^tree-7/CreateTreeVariable"
  input: "^tree-8/CreateTreeVariable"
  input: "^tree-9/CreateTreeVariable"
  device: "/device:CPU:0"
}
node {
  name: "group_deps_2/NoOp"
  op: "NoOp"
  input: "^init"
}
node {
  name: "group_deps_2/NoOp_1"
  op: "NoOp"
  input: "^init_1"
  device: "/device:CPU:0"
}
node {
  name: "group_deps_2"
  op: "NoOp"
  input: "^group_deps_2/NoOp"
  input: "^group_deps_2/NoOp_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "device_dummy_0"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "device_dummy_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "device_dummy_2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "device_dummy_3"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "device_dummy_4"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "device_dummy_5"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "device_dummy_6"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "device_dummy_7"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "device_dummy_8"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "device_dummy_9"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "device_dummy_10"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "device_dummy_11"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "device_dummy_12"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "device_dummy_13"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "device_dummy_14"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "device_dummy_15"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_15"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "device_dummy_16"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_16"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "device_dummy_17"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_17"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "device_dummy_18"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_18"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "device_dummy_19"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_19"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "device_dummy_20"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_20"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "device_dummy_21"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_21"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "device_dummy_22"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_22"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "device_dummy_23"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_23"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "device_dummy_24"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_24"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "multi_class_head/metrics/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "multi_class_head/metrics/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "multi_class_head/metrics/accuracy/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "multi_class_head/metrics/accuracy/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 30
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "global_step"
        string_val: "device_dummy_0"
        string_val: "device_dummy_1"
        string_val: "device_dummy_2"
        string_val: "device_dummy_3"
        string_val: "device_dummy_4"
        string_val: "device_dummy_5"
        string_val: "device_dummy_6"
        string_val: "device_dummy_7"
        string_val: "device_dummy_8"
        string_val: "device_dummy_9"
        string_val: "device_dummy_10"
        string_val: "device_dummy_11"
        string_val: "device_dummy_12"
        string_val: "device_dummy_13"
        string_val: "device_dummy_14"
        string_val: "device_dummy_15"
        string_val: "device_dummy_16"
        string_val: "device_dummy_17"
        string_val: "device_dummy_18"
        string_val: "device_dummy_19"
        string_val: "device_dummy_20"
        string_val: "device_dummy_21"
        string_val: "device_dummy_22"
        string_val: "device_dummy_23"
        string_val: "device_dummy_24"
        string_val: "multi_class_head/metrics/mean/total"
        string_val: "multi_class_head/metrics/mean/count"
        string_val: "multi_class_head/metrics/accuracy/total"
        string_val: "multi_class_head/metrics/accuracy/count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/stack"
  op: "Pack"
  input: "stats-0/FertileStatsIsInitializedOp"
  input: "tree-0/TreeIsInitializedOp"
  input: "stats-1/FertileStatsIsInitializedOp"
  input: "tree-1/TreeIsInitializedOp"
  input: "stats-2/FertileStatsIsInitializedOp"
  input: "tree-2/TreeIsInitializedOp"
  input: "stats-3/FertileStatsIsInitializedOp"
  input: "tree-3/TreeIsInitializedOp"
  input: "stats-4/FertileStatsIsInitializedOp"
  input: "tree-4/TreeIsInitializedOp"
  input: "stats-5/FertileStatsIsInitializedOp"
  input: "tree-5/TreeIsInitializedOp"
  input: "stats-6/FertileStatsIsInitializedOp"
  input: "tree-6/TreeIsInitializedOp"
  input: "stats-7/FertileStatsIsInitializedOp"
  input: "tree-7/TreeIsInitializedOp"
  input: "stats-8/FertileStatsIsInitializedOp"
  input: "tree-8/TreeIsInitializedOp"
  input: "stats-9/FertileStatsIsInitializedOp"
  input: "tree-9/TreeIsInitializedOp"
  input: "stats-10/FertileStatsIsInitializedOp"
  input: "tree-10/TreeIsInitializedOp"
  input: "stats-11/FertileStatsIsInitializedOp"
  input: "tree-11/TreeIsInitializedOp"
  input: "stats-12/FertileStatsIsInitializedOp"
  input: "tree-12/TreeIsInitializedOp"
  input: "stats-13/FertileStatsIsInitializedOp"
  input: "tree-13/TreeIsInitializedOp"
  input: "stats-14/FertileStatsIsInitializedOp"
  input: "tree-14/TreeIsInitializedOp"
  input: "stats-15/FertileStatsIsInitializedOp"
  input: "tree-15/TreeIsInitializedOp"
  input: "stats-16/FertileStatsIsInitializedOp"
  input: "tree-16/TreeIsInitializedOp"
  input: "stats-17/FertileStatsIsInitializedOp"
  input: "tree-17/TreeIsInitializedOp"
  input: "stats-18/FertileStatsIsInitializedOp"
  input: "tree-18/TreeIsInitializedOp"
  input: "stats-19/FertileStatsIsInitializedOp"
  input: "tree-19/TreeIsInitializedOp"
  input: "stats-20/FertileStatsIsInitializedOp"
  input: "tree-20/TreeIsInitializedOp"
  input: "stats-21/FertileStatsIsInitializedOp"
  input: "tree-21/TreeIsInitializedOp"
  input: "stats-22/FertileStatsIsInitializedOp"
  input: "tree-22/TreeIsInitializedOp"
  input: "stats-23/FertileStatsIsInitializedOp"
  input: "tree-23/TreeIsInitializedOp"
  input: "stats-24/FertileStatsIsInitializedOp"
  input: "tree-24/TreeIsInitializedOp"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 50
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_resources/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 50
          }
        }
        string_val: "stats-0:0"
        string_val: "tree-0:0"
        string_val: "stats-1:0"
        string_val: "tree-1:0"
        string_val: "stats-2:0"
        string_val: "tree-2:0"
        string_val: "stats-3:0"
        string_val: "tree-3:0"
        string_val: "stats-4:0"
        string_val: "tree-4:0"
        string_val: "stats-5:0"
        string_val: "tree-5:0"
        string_val: "stats-6:0"
        string_val: "tree-6:0"
        string_val: "stats-7:0"
        string_val: "tree-7:0"
        string_val: "stats-8:0"
        string_val: "tree-8:0"
        string_val: "stats-9:0"
        string_val: "tree-9:0"
        string_val: "stats-10:0"
        string_val: "tree-10:0"
        string_val: "stats-11:0"
        string_val: "tree-11:0"
        string_val: "stats-12:0"
        string_val: "tree-12:0"
        string_val: "stats-13:0"
        string_val: "tree-13:0"
        string_val: "stats-14:0"
        string_val: "tree-14:0"
        string_val: "stats-15:0"
        string_val: "tree-15:0"
        string_val: "stats-16:0"
        string_val: "tree-16:0"
        string_val: "stats-17:0"
        string_val: "tree-17:0"
        string_val: "stats-18:0"
        string_val: "tree-18:0"
        string_val: "stats-19:0"
        string_val: "tree-19:0"
        string_val: "stats-20:0"
        string_val: "tree-20:0"
        string_val: "stats-21:0"
        string_val: "tree-21:0"
        string_val: "stats-22:0"
        string_val: "tree-22:0"
        string_val: "stats-23:0"
        string_val: "tree-23:0"
        string_val: "stats-24:0"
        string_val: "tree-24:0"
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_resources/boolean_mask/Shape"
  input: "report_uninitialized_resources/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_resources/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_resources/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_resources/boolean_mask/strided_slice"
  input: "report_uninitialized_resources/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_resources/boolean_mask/Shape_1"
  input: "report_uninitialized_resources/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_resources/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_resources/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_resources/boolean_mask/Shape_2"
  input: "report_uninitialized_resources/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_resources/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_resources/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_resources/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_resources/boolean_mask/strided_slice_1"
  input: "report_uninitialized_resources/boolean_mask/concat/values_1"
  input: "report_uninitialized_resources/boolean_mask/strided_slice_2"
  input: "report_uninitialized_resources/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_resources/Const"
  input: "report_uninitialized_resources/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_resources/LogicalNot"
  input: "report_uninitialized_resources/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_resources/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_resources/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_resources/boolean_mask/Reshape"
  input: "report_uninitialized_resources/boolean_mask/Squeeze"
  input: "report_uninitialized_resources/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_2"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/boolean_mask/GatherV2"
  input: "concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "device_dummy_0"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "device_dummy_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "device_dummy_2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "device_dummy_3"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "device_dummy_4"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "device_dummy_5"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "device_dummy_6"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "device_dummy_7"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "device_dummy_8"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "device_dummy_9"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "device_dummy_10"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "device_dummy_11"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "device_dummy_12"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "device_dummy_13"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "device_dummy_14"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "device_dummy_15"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_15"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "device_dummy_16"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_16"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "device_dummy_17"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_17"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "device_dummy_18"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_18"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "device_dummy_19"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_19"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "device_dummy_20"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_20"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "device_dummy_21"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_21"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "device_dummy_22"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_22"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "device_dummy_23"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_23"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "device_dummy_24"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_24"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_18"
  input: "report_uninitialized_variables_1/IsVariableInitialized_19"
  input: "report_uninitialized_variables_1/IsVariableInitialized_20"
  input: "report_uninitialized_variables_1/IsVariableInitialized_21"
  input: "report_uninitialized_variables_1/IsVariableInitialized_22"
  input: "report_uninitialized_variables_1/IsVariableInitialized_23"
  input: "report_uninitialized_variables_1/IsVariableInitialized_24"
  input: "report_uninitialized_variables_1/IsVariableInitialized_25"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 26
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 26
          }
        }
        string_val: "global_step"
        string_val: "device_dummy_0"
        string_val: "device_dummy_1"
        string_val: "device_dummy_2"
        string_val: "device_dummy_3"
        string_val: "device_dummy_4"
        string_val: "device_dummy_5"
        string_val: "device_dummy_6"
        string_val: "device_dummy_7"
        string_val: "device_dummy_8"
        string_val: "device_dummy_9"
        string_val: "device_dummy_10"
        string_val: "device_dummy_11"
        string_val: "device_dummy_12"
        string_val: "device_dummy_13"
        string_val: "device_dummy_14"
        string_val: "device_dummy_15"
        string_val: "device_dummy_16"
        string_val: "device_dummy_17"
        string_val: "device_dummy_18"
        string_val: "device_dummy_19"
        string_val: "device_dummy_20"
        string_val: "device_dummy_21"
        string_val: "device_dummy_22"
        string_val: "device_dummy_23"
        string_val: "device_dummy_24"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 26
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 26
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 26
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^multi_class_head/metrics/accuracy/count/Assign"
  input: "^multi_class_head/metrics/accuracy/total/Assign"
  input: "^multi_class_head/metrics/mean/count/Assign"
  input: "^multi_class_head/metrics/mean/total/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_3"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full"
  input: "average_tree_size"
  input: "loss"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_2c2c5b82b15641399fbaae3dbb9f83cd/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/ShardedFilename_1/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename_1"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename_1/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2_1/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 75
          }
        }
        string_val: "device_dummy_0"
        string_val: "device_dummy_1"
        string_val: "device_dummy_10"
        string_val: "device_dummy_11"
        string_val: "device_dummy_12"
        string_val: "device_dummy_13"
        string_val: "device_dummy_14"
        string_val: "device_dummy_15"
        string_val: "device_dummy_16"
        string_val: "device_dummy_17"
        string_val: "device_dummy_18"
        string_val: "device_dummy_19"
        string_val: "device_dummy_2"
        string_val: "device_dummy_20"
        string_val: "device_dummy_21"
        string_val: "device_dummy_22"
        string_val: "device_dummy_23"
        string_val: "device_dummy_24"
        string_val: "device_dummy_3"
        string_val: "device_dummy_4"
        string_val: "device_dummy_5"
        string_val: "device_dummy_6"
        string_val: "device_dummy_7"
        string_val: "device_dummy_8"
        string_val: "device_dummy_9"
        string_val: "stats-0:0"
        string_val: "stats-10:0"
        string_val: "stats-11:0"
        string_val: "stats-12:0"
        string_val: "stats-13:0"
        string_val: "stats-14:0"
        string_val: "stats-15:0"
        string_val: "stats-16:0"
        string_val: "stats-17:0"
        string_val: "stats-18:0"
        string_val: "stats-19:0"
        string_val: "stats-1:0"
        string_val: "stats-20:0"
        string_val: "stats-21:0"
        string_val: "stats-22:0"
        string_val: "stats-23:0"
        string_val: "stats-24:0"
        string_val: "stats-2:0"
        string_val: "stats-3:0"
        string_val: "stats-4:0"
        string_val: "stats-5:0"
        string_val: "stats-6:0"
        string_val: "stats-7:0"
        string_val: "stats-8:0"
        string_val: "stats-9:0"
        string_val: "tree-0:0"
        string_val: "tree-10:0"
        string_val: "tree-11:0"
        string_val: "tree-12:0"
        string_val: "tree-13:0"
        string_val: "tree-14:0"
        string_val: "tree-15:0"
        string_val: "tree-16:0"
        string_val: "tree-17:0"
        string_val: "tree-18:0"
        string_val: "tree-19:0"
        string_val: "tree-1:0"
        string_val: "tree-20:0"
        string_val: "tree-21:0"
        string_val: "tree-22:0"
        string_val: "tree-23:0"
        string_val: "tree-24:0"
        string_val: "tree-2:0"
        string_val: "tree-3:0"
        string_val: "tree-4:0"
        string_val: "tree-5:0"
        string_val: "tree-6:0"
        string_val: "tree-7:0"
        string_val: "tree-8:0"
        string_val: "tree-9:0"
      }
    }
  }
}
node {
  name: "save/SaveV2_1/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 75
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2_1"
  op: "SaveV2"
  input: "save/ShardedFilename_1"
  input: "save/SaveV2_1/tensor_names"
  input: "save/SaveV2_1/shape_and_slices"
  input: "device_dummy_0"
  input: "device_dummy_1"
  input: "device_dummy_10"
  input: "device_dummy_11"
  input: "device_dummy_12"
  input: "device_dummy_13"
  input: "device_dummy_14"
  input: "device_dummy_15"
  input: "device_dummy_16"
  input: "device_dummy_17"
  input: "device_dummy_18"
  input: "device_dummy_19"
  input: "device_dummy_2"
  input: "device_dummy_20"
  input: "device_dummy_21"
  input: "device_dummy_22"
  input: "device_dummy_23"
  input: "device_dummy_24"
  input: "device_dummy_3"
  input: "device_dummy_4"
  input: "device_dummy_5"
  input: "device_dummy_6"
  input: "device_dummy_7"
  input: "device_dummy_8"
  input: "device_dummy_9"
  input: "stats-0/FertileStatsSerialize"
  input: "stats-10/FertileStatsSerialize"
  input: "stats-11/FertileStatsSerialize"
  input: "stats-12/FertileStatsSerialize"
  input: "stats-13/FertileStatsSerialize"
  input: "stats-14/FertileStatsSerialize"
  input: "stats-15/FertileStatsSerialize"
  input: "stats-16/FertileStatsSerialize"
  input: "stats-17/FertileStatsSerialize"
  input: "stats-18/FertileStatsSerialize"
  input: "stats-19/FertileStatsSerialize"
  input: "stats-1/FertileStatsSerialize"
  input: "stats-20/FertileStatsSerialize"
  input: "stats-21/FertileStatsSerialize"
  input: "stats-22/FertileStatsSerialize"
  input: "stats-23/FertileStatsSerialize"
  input: "stats-24/FertileStatsSerialize"
  input: "stats-2/FertileStatsSerialize"
  input: "stats-3/FertileStatsSerialize"
  input: "stats-4/FertileStatsSerialize"
  input: "stats-5/FertileStatsSerialize"
  input: "stats-6/FertileStatsSerialize"
  input: "stats-7/FertileStatsSerialize"
  input: "stats-8/FertileStatsSerialize"
  input: "stats-9/FertileStatsSerialize"
  input: "tree-0/TreeSerialize"
  input: "tree-10/TreeSerialize"
  input: "tree-11/TreeSerialize"
  input: "tree-12/TreeSerialize"
  input: "tree-13/TreeSerialize"
  input: "tree-14/TreeSerialize"
  input: "tree-15/TreeSerialize"
  input: "tree-16/TreeSerialize"
  input: "tree-17/TreeSerialize"
  input: "tree-18/TreeSerialize"
  input: "tree-19/TreeSerialize"
  input: "tree-1/TreeSerialize"
  input: "tree-20/TreeSerialize"
  input: "tree-21/TreeSerialize"
  input: "tree-22/TreeSerialize"
  input: "tree-23/TreeSerialize"
  input: "tree-24/TreeSerialize"
  input: "tree-2/TreeSerialize"
  input: "tree-3/TreeSerialize"
  input: "tree-4/TreeSerialize"
  input: "tree-5/TreeSerialize"
  input: "tree-6/TreeSerialize"
  input: "tree-7/TreeSerialize"
  input: "tree-8/TreeSerialize"
  input: "tree-9/TreeSerialize"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
}
node {
  name: "save/control_dependency_1"
  op: "Identity"
  input: "save/ShardedFilename_1"
  input: "^save/SaveV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "save/ShardedFilename_1"
  input: "^save/control_dependency"
  input: "^save/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  input: "^save/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 75
          }
        }
        string_val: "device_dummy_0"
        string_val: "device_dummy_1"
        string_val: "device_dummy_10"
        string_val: "device_dummy_11"
        string_val: "device_dummy_12"
        string_val: "device_dummy_13"
        string_val: "device_dummy_14"
        string_val: "device_dummy_15"
        string_val: "device_dummy_16"
        string_val: "device_dummy_17"
        string_val: "device_dummy_18"
        string_val: "device_dummy_19"
        string_val: "device_dummy_2"
        string_val: "device_dummy_20"
        string_val: "device_dummy_21"
        string_val: "device_dummy_22"
        string_val: "device_dummy_23"
        string_val: "device_dummy_24"
        string_val: "device_dummy_3"
        string_val: "device_dummy_4"
        string_val: "device_dummy_5"
        string_val: "device_dummy_6"
        string_val: "device_dummy_7"
        string_val: "device_dummy_8"
        string_val: "device_dummy_9"
        string_val: "stats-0:0"
        string_val: "stats-10:0"
        string_val: "stats-11:0"
        string_val: "stats-12:0"
        string_val: "stats-13:0"
        string_val: "stats-14:0"
        string_val: "stats-15:0"
        string_val: "stats-16:0"
        string_val: "stats-17:0"
        string_val: "stats-18:0"
        string_val: "stats-19:0"
        string_val: "stats-1:0"
        string_val: "stats-20:0"
        string_val: "stats-21:0"
        string_val: "stats-22:0"
        string_val: "stats-23:0"
        string_val: "stats-24:0"
        string_val: "stats-2:0"
        string_val: "stats-3:0"
        string_val: "stats-4:0"
        string_val: "stats-5:0"
        string_val: "stats-6:0"
        string_val: "stats-7:0"
        string_val: "stats-8:0"
        string_val: "stats-9:0"
        string_val: "tree-0:0"
        string_val: "tree-10:0"
        string_val: "tree-11:0"
        string_val: "tree-12:0"
        string_val: "tree-13:0"
        string_val: "tree-14:0"
        string_val: "tree-15:0"
        string_val: "tree-16:0"
        string_val: "tree-17:0"
        string_val: "tree-18:0"
        string_val: "tree-19:0"
        string_val: "tree-1:0"
        string_val: "tree-20:0"
        string_val: "tree-21:0"
        string_val: "tree-22:0"
        string_val: "tree-23:0"
        string_val: "tree-24:0"
        string_val: "tree-2:0"
        string_val: "tree-3:0"
        string_val: "tree-4:0"
        string_val: "tree-5:0"
        string_val: "tree-6:0"
        string_val: "tree-7:0"
        string_val: "tree-8:0"
        string_val: "tree-9:0"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 75
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "device_dummy_0"
  input: "save/RestoreV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "device_dummy_1"
  input: "save/RestoreV2_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "device_dummy_10"
  input: "save/RestoreV2_1:2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "device_dummy_11"
  input: "save/RestoreV2_1:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "device_dummy_12"
  input: "save/RestoreV2_1:4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "device_dummy_13"
  input: "save/RestoreV2_1:5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "device_dummy_14"
  input: "save/RestoreV2_1:6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "device_dummy_15"
  input: "save/RestoreV2_1:7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_15"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "device_dummy_16"
  input: "save/RestoreV2_1:8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_16"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "device_dummy_17"
  input: "save/RestoreV2_1:9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_17"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "device_dummy_18"
  input: "save/RestoreV2_1:10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_18"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "device_dummy_19"
  input: "save/RestoreV2_1:11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_19"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "device_dummy_2"
  input: "save/RestoreV2_1:12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "device_dummy_20"
  input: "save/RestoreV2_1:13"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_20"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "device_dummy_21"
  input: "save/RestoreV2_1:14"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_21"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "device_dummy_22"
  input: "save/RestoreV2_1:15"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_22"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "device_dummy_23"
  input: "save/RestoreV2_1:16"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_23"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "device_dummy_24"
  input: "save/RestoreV2_1:17"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_24"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "device_dummy_3"
  input: "save/RestoreV2_1:18"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "device_dummy_4"
  input: "save/RestoreV2_1:19"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "device_dummy_5"
  input: "save/RestoreV2_1:20"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "device_dummy_6"
  input: "save/RestoreV2_1:21"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "device_dummy_7"
  input: "save/RestoreV2_1:22"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "device_dummy_8"
  input: "save/RestoreV2_1:23"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "device_dummy_9"
  input: "save/RestoreV2_1:24"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/FertileStatsDeserialize"
  op: "FertileStatsDeserialize"
  input: "stats-0"
  input: "save/RestoreV2_1:25"
  input: "^stats-0/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_1"
  op: "FertileStatsDeserialize"
  input: "stats-10"
  input: "save/RestoreV2_1:26"
  input: "^stats-10/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_2"
  op: "FertileStatsDeserialize"
  input: "stats-11"
  input: "save/RestoreV2_1:27"
  input: "^stats-11/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_3"
  op: "FertileStatsDeserialize"
  input: "stats-12"
  input: "save/RestoreV2_1:28"
  input: "^stats-12/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_4"
  op: "FertileStatsDeserialize"
  input: "stats-13"
  input: "save/RestoreV2_1:29"
  input: "^stats-13/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_5"
  op: "FertileStatsDeserialize"
  input: "stats-14"
  input: "save/RestoreV2_1:30"
  input: "^stats-14/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_6"
  op: "FertileStatsDeserialize"
  input: "stats-15"
  input: "save/RestoreV2_1:31"
  input: "^stats-15/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_7"
  op: "FertileStatsDeserialize"
  input: "stats-16"
  input: "save/RestoreV2_1:32"
  input: "^stats-16/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_8"
  op: "FertileStatsDeserialize"
  input: "stats-17"
  input: "save/RestoreV2_1:33"
  input: "^stats-17/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_9"
  op: "FertileStatsDeserialize"
  input: "stats-18"
  input: "save/RestoreV2_1:34"
  input: "^stats-18/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_10"
  op: "FertileStatsDeserialize"
  input: "stats-19"
  input: "save/RestoreV2_1:35"
  input: "^stats-19/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_11"
  op: "FertileStatsDeserialize"
  input: "stats-1"
  input: "save/RestoreV2_1:36"
  input: "^stats-1/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_12"
  op: "FertileStatsDeserialize"
  input: "stats-20"
  input: "save/RestoreV2_1:37"
  input: "^stats-20/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_13"
  op: "FertileStatsDeserialize"
  input: "stats-21"
  input: "save/RestoreV2_1:38"
  input: "^stats-21/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_14"
  op: "FertileStatsDeserialize"
  input: "stats-22"
  input: "save/RestoreV2_1:39"
  input: "^stats-22/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_15"
  op: "FertileStatsDeserialize"
  input: "stats-23"
  input: "save/RestoreV2_1:40"
  input: "^stats-23/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_16"
  op: "FertileStatsDeserialize"
  input: "stats-24"
  input: "save/RestoreV2_1:41"
  input: "^stats-24/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_17"
  op: "FertileStatsDeserialize"
  input: "stats-2"
  input: "save/RestoreV2_1:42"
  input: "^stats-2/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_18"
  op: "FertileStatsDeserialize"
  input: "stats-3"
  input: "save/RestoreV2_1:43"
  input: "^stats-3/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_19"
  op: "FertileStatsDeserialize"
  input: "stats-4"
  input: "save/RestoreV2_1:44"
  input: "^stats-4/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_20"
  op: "FertileStatsDeserialize"
  input: "stats-5"
  input: "save/RestoreV2_1:45"
  input: "^stats-5/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_21"
  op: "FertileStatsDeserialize"
  input: "stats-6"
  input: "save/RestoreV2_1:46"
  input: "^stats-6/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_22"
  op: "FertileStatsDeserialize"
  input: "stats-7"
  input: "save/RestoreV2_1:47"
  input: "^stats-7/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_23"
  op: "FertileStatsDeserialize"
  input: "stats-8"
  input: "save/RestoreV2_1:48"
  input: "^stats-8/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_24"
  op: "FertileStatsDeserialize"
  input: "stats-9"
  input: "save/RestoreV2_1:49"
  input: "^stats-9/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize"
  op: "TreeDeserialize"
  input: "tree-0"
  input: "save/RestoreV2_1:50"
  input: "^tree-0/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_1"
  op: "TreeDeserialize"
  input: "tree-10"
  input: "save/RestoreV2_1:51"
  input: "^tree-10/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_2"
  op: "TreeDeserialize"
  input: "tree-11"
  input: "save/RestoreV2_1:52"
  input: "^tree-11/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_3"
  op: "TreeDeserialize"
  input: "tree-12"
  input: "save/RestoreV2_1:53"
  input: "^tree-12/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_4"
  op: "TreeDeserialize"
  input: "tree-13"
  input: "save/RestoreV2_1:54"
  input: "^tree-13/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_5"
  op: "TreeDeserialize"
  input: "tree-14"
  input: "save/RestoreV2_1:55"
  input: "^tree-14/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_6"
  op: "TreeDeserialize"
  input: "tree-15"
  input: "save/RestoreV2_1:56"
  input: "^tree-15/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_7"
  op: "TreeDeserialize"
  input: "tree-16"
  input: "save/RestoreV2_1:57"
  input: "^tree-16/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_8"
  op: "TreeDeserialize"
  input: "tree-17"
  input: "save/RestoreV2_1:58"
  input: "^tree-17/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_9"
  op: "TreeDeserialize"
  input: "tree-18"
  input: "save/RestoreV2_1:59"
  input: "^tree-18/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_10"
  op: "TreeDeserialize"
  input: "tree-19"
  input: "save/RestoreV2_1:60"
  input: "^tree-19/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_11"
  op: "TreeDeserialize"
  input: "tree-1"
  input: "save/RestoreV2_1:61"
  input: "^tree-1/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_12"
  op: "TreeDeserialize"
  input: "tree-20"
  input: "save/RestoreV2_1:62"
  input: "^tree-20/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_13"
  op: "TreeDeserialize"
  input: "tree-21"
  input: "save/RestoreV2_1:63"
  input: "^tree-21/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_14"
  op: "TreeDeserialize"
  input: "tree-22"
  input: "save/RestoreV2_1:64"
  input: "^tree-22/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_15"
  op: "TreeDeserialize"
  input: "tree-23"
  input: "save/RestoreV2_1:65"
  input: "^tree-23/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_16"
  op: "TreeDeserialize"
  input: "tree-24"
  input: "save/RestoreV2_1:66"
  input: "^tree-24/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_17"
  op: "TreeDeserialize"
  input: "tree-2"
  input: "save/RestoreV2_1:67"
  input: "^tree-2/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_18"
  op: "TreeDeserialize"
  input: "tree-3"
  input: "save/RestoreV2_1:68"
  input: "^tree-3/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_19"
  op: "TreeDeserialize"
  input: "tree-4"
  input: "save/RestoreV2_1:69"
  input: "^tree-4/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_20"
  op: "TreeDeserialize"
  input: "tree-5"
  input: "save/RestoreV2_1:70"
  input: "^tree-5/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_21"
  op: "TreeDeserialize"
  input: "tree-6"
  input: "save/RestoreV2_1:71"
  input: "^tree-6/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_22"
  op: "TreeDeserialize"
  input: "tree-7"
  input: "save/RestoreV2_1:72"
  input: "^tree-7/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_23"
  op: "TreeDeserialize"
  input: "tree-8"
  input: "save/RestoreV2_1:73"
  input: "^tree-8/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/TreeDeserialize_24"
  op: "TreeDeserialize"
  input: "tree-9"
  input: "save/RestoreV2_1:74"
  input: "^tree-9/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\0318d`\003j\005\r\000\000\240Ar\005\r\000\000zCz\005\r\244p}?\250\001\274\001"
    }
  }
}
node {
  name: "save/restore_shard_1"
  op: "NoOp"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/FertileStatsDeserialize"
  input: "^save/FertileStatsDeserialize_1"
  input: "^save/FertileStatsDeserialize_10"
  input: "^save/FertileStatsDeserialize_11"
  input: "^save/FertileStatsDeserialize_12"
  input: "^save/FertileStatsDeserialize_13"
  input: "^save/FertileStatsDeserialize_14"
  input: "^save/FertileStatsDeserialize_15"
  input: "^save/FertileStatsDeserialize_16"
  input: "^save/FertileStatsDeserialize_17"
  input: "^save/FertileStatsDeserialize_18"
  input: "^save/FertileStatsDeserialize_19"
  input: "^save/FertileStatsDeserialize_2"
  input: "^save/FertileStatsDeserialize_20"
  input: "^save/FertileStatsDeserialize_21"
  input: "^save/FertileStatsDeserialize_22"
  input: "^save/FertileStatsDeserialize_23"
  input: "^save/FertileStatsDeserialize_24"
  input: "^save/FertileStatsDeserialize_3"
  input: "^save/FertileStatsDeserialize_4"
  input: "^save/FertileStatsDeserialize_5"
  input: "^save/FertileStatsDeserialize_6"
  input: "^save/FertileStatsDeserialize_7"
  input: "^save/FertileStatsDeserialize_8"
  input: "^save/FertileStatsDeserialize_9"
  input: "^save/TreeDeserialize"
  input: "^save/TreeDeserialize_1"
  input: "^save/TreeDeserialize_10"
  input: "^save/TreeDeserialize_11"
  input: "^save/TreeDeserialize_12"
  input: "^save/TreeDeserialize_13"
  input: "^save/TreeDeserialize_14"
  input: "^save/TreeDeserialize_15"
  input: "^save/TreeDeserialize_16"
  input: "^save/TreeDeserialize_17"
  input: "^save/TreeDeserialize_18"
  input: "^save/TreeDeserialize_19"
  input: "^save/TreeDeserialize_2"
  input: "^save/TreeDeserialize_20"
  input: "^save/TreeDeserialize_21"
  input: "^save/TreeDeserialize_22"
  input: "^save/TreeDeserialize_23"
  input: "^save/TreeDeserialize_24"
  input: "^save/TreeDeserialize_3"
  input: "^save/TreeDeserialize_4"
  input: "^save/TreeDeserialize_5"
  input: "^save/TreeDeserialize_6"
  input: "^save/TreeDeserialize_7"
  input: "^save/TreeDeserialize_8"
  input: "^save/TreeDeserialize_9"
  device: "/device:CPU:0"
}
node {
  name: "save/restore_all/NoOp"
  op: "NoOp"
  input: "^save/restore_shard"
}
node {
  name: "save/restore_all/NoOp_1"
  op: "NoOp"
  input: "^save/restore_shard_1"
  device: "/device:CPU:0"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_all/NoOp"
  input: "^save/restore_all/NoOp_1"
}
versions {
  producer: 26
}
